{"version":3,"sources":["components/Jumbotron/index.js","utils/helpers.js","components/Contact/index.js","components/Gallery/index.js","pages/Home.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/ProductList.js","pages/ProductDetail.js","components/ServiceItem/index.js","components/ServiceList/index.js","pages/ServiceList.js","pages/ServiceDetail.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["Jumbotron","className","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","target","isValid","test","String","toLowerCase","validateEmail","value","length","id","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","PhotoList","slidePosition","SlideShow","i","slides","document","getElementsByClassName","style","display","setTimeout","to","src","width","alt","Home","Gallery","Contact","UPDATE_PRODUCTS","UPDATE_SERVICES","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","init","initialState","state","reducer","action","products","services","cartOpen","cart","map","product","purchaseQuantity","service","newState","filter","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_SERVICES","QUERY_CHECKOUT","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CartItem","placeholder","onChange","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","push","variables","ProdList","ProductDetail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","ServiceItem","ServiceList","ServList","ServiceDetail","currentService","setCurrentService","indexedServices","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","password","useMutation","login","error","handleFormSubmit","event","mutationResponse","Signup","addUser","username","firstName","Nav","href","logout","Success","addOrder","cervices","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26852123.chunk.js","sourcesContent":["import React from 'react';\n\n// import Contact from '../../components/Contact'\nimport './style.css';\n\nfunction Jumbotron() {\n\treturn (\n\t\t<div className=\"jumbotron\">\n\t\t\t<div className=\"jumbotron-cta\">\n\t\t\t\t<h2>Welcome to the MERN Spa!</h2>\n\t\t\t\t<p>Have a look around to see what we're about</p>\n\t\t\t</div>\n\t\t\t<div className=\"jumbotron-form\">{/* <Contact /> */}</div>\n\t\t</div>\n\t);\n}\n\nexport default Jumbotron;\n","export function pluralize(name, count) {\n\tif (count === 1) {\n\t\treturn name;\n\t}\n\treturn name + 's';\n}\n\nexport function validateEmail(email) {\n\tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\treturn re.test(String(email).toLowerCase());\n  }\n  \n\nexport function idbPromise(storeName, method, object) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = window.indexedDB.open('shop-shop', 1);\n\t\tlet db, tx, store;\n\t\trequest.onupgradeneeded = function (e) {\n\t\t\tconst db = request.result;\n\t\t\tdb.createObjectStore('products', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('services', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('categories', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('cart', { keyPath: '_id' });\n\t\t};\n\n\t\trequest.onerror = function (e) {\n\t\t\tconsole.log('There was an error');\n\t\t};\n\n\t\trequest.onsuccess = function (e) {\n\t\t\tdb = request.result;\n\t\t\ttx = db.transaction(storeName, 'readwrite');\n\t\t\tstore = tx.objectStore(storeName);\n\n\t\t\tdb.onerror = function (e) {\n\t\t\t\tconsole.log('error', e);\n\t\t\t};\n\n\t\t\tswitch (method) {\n\t\t\t\tcase 'put':\n\t\t\t\t\tstore.put(object);\n\t\t\t\t\tresolve(object);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'get':\n\t\t\t\t\tconst all = store.getAll();\n\t\t\t\t\tall.onsuccess = function () {\n\t\t\t\t\t\tresolve(all.result);\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\t\tstore.delete(object._id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('No valid method');\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttx.oncomplete = function () {\n\t\t\t\tdb.close();\n\t\t\t};\n\t\t};\n\t});\n}\n","import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n\t//get formstate\n\t//initialize keys as empty strings for each user input\n\t//initialize set form state\n\tconst [formState, setFormState] = useState({\n\t\tname: '',\n\t\temail: '',\n\t\tmessage: '',\n\t});\n\n\tconst [errorMessage, setErrorMessage] = useState('');\n\t//further destructure formState\n\t//pass these values into functions\n\tconst { name, email, message } = formState;\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tif (!errorMessage) {\n\t\t\tconsole.log('Submit Form', formState);\n\t\t}\n\t};\n\n\t//will sync formstate with user input from DOM\n\t//fires with every keystroke\n\tconst handleChange = (e) => {\n\t\t//validate before syncing\n\t\tif (e.target.name === 'email') {\n\t\t\tconst isValid = validateEmail(e.target.value);\n\t\t\t//sets message for invalid email\n\t\t\tif (!isValid) {\n\t\t\t\tsetErrorMessage('Your email is invalid.');\n\t\t\t} else {\n\t\t\t\tsetErrorMessage('');\n\t\t\t}\n\t\t} else {\n\t\t\t//checks if the other two fields are blank\n\t\t\tif (!e.target.value.length) {\n\t\t\t\tsetErrorMessage(`${e.target.name} is required.`);\n\t\t\t} else {\n\t\t\t\tsetErrorMessage('');\n\t\t\t}\n\t\t}\n\t\t//if no error messages\n\t\t//sync form state\n\t\tif (!errorMessage) {\n\t\t\tsetFormState({ ...formState, [e.target.name]: e.target.value });\n\t\t\tconsole.log('Handle Form', formState);\n\t\t}\n\t};\n\n\t//create a form with three inputs\n\t//name, email, message text\n\t// replace label for=''\n\t//should be label htmlFor=''\n\t//use destructured form states to set values\n\t//only show error message if it has a message in it\n\treturn (\n\t\t<section className=\"form\">\n\t\t\t<h2 data-testid=\"h1tag\" className='section-title'>Reach Out</h2>\n\t\t\t<form id=\"contact-form\" onSubmit={handleSubmit}>\n\t\t\t\t<div>\n\t\t\t\t\t<h4 className='form-header'>Send us a message!</h4>\n\t\t\t\t</div>\n\t\t\t\t<div className='text-input'>\n\t\t\t\t\t<label className=\"text-label\" htmlFor=\"name\">\n\t\t\t\t\t\tName:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"text-input\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tdefaultValue={name}\n\t\t\t\t\t\tonBlur={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='text-input'>\n\t\t\t\t\t<label className=\"text-label\" htmlFor=\"email\">\n\t\t\t\t\t\tEmail:\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"text-input\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tdefaultValue={email}\n\t\t\t\t\t\tonBlur={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className='text-input'>\n\t\t\t\t\t<label className=\"text-label\" htmlFor=\"message\">\n\t\t\t\t\t\tMessage:\n\t\t\t\t\t</label>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"text-input\"\n\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\trows=\"2\"\n\t\t\t\t\t\tdefaultValue={message}\n\t\t\t\t\t\tonBlur={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{errorMessage && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"error-text\">{errorMessage}</p>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<button data-testid=\"button\" type=\"submit\">\n\t\t\t\t\tSubmit\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</section>\n\t);\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n//import Modal from '../Modal';\n\n// const toService = () => {\n//     .find((cartItem) => cartItem._id === _id)\n// }\n\nconst PhotoList = () => {\n\t// \t// const [isModalOpen, setIsModalOpen] = useState(false);\n\t// \t// const [, setCurrentPhoto] = useState();\n\n\t// \tconst [photos] = useState([\n\t// \t\t{\n\t// \t\t\tname: 'Mongoose Massage',\n\t// \t\t\tdescription:\n\t// \t\t\t\t'A 60 minute massage where you get to learn all about MongoDB',\n\t// \t\t\timage: 'mongoosemassage.jpg',\n\t// \t\t\t// category: categories[1]._id,\n\t// \t\t\tprice: 20000.0,\n\t// \t\t\tquantity: 500,\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tname: 'Express Eyebrow Wax',\n\t// \t\t\tdescription: 'Efficient and effective eyebrow wax',\n\t// \t\t\timage: 'expresseyebrowwax.jpg',\n\t// \t\t\t// category: categories[1]._id,\n\t// \t\t\tprice: 12000.0,\n\t// \t\t\tquantity: 500,\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tname: 'React Rejuvenating Facial',\n\t// \t\t\t// category: categories[1]._id,\n\t// \t\t\tdescription: 'A facial to relax and rejuvenate',\n\t// \t\t\timage: 'reactfacial.jpg',\n\t// \t\t\tprice: 10000.0,\n\t// \t\t\tquantity: 500,\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tname: 'Node Nails- Manicure',\n\t// \t\t\t// category: categories[1]._id,\n\t// \t\t\tdescription:\n\t// \t\t\t\t'Praesent placerat, odio vel euismod venenatis, lectus arcu laoreet felis, et fringilla sapien turpis vestibulum nisl.',\n\t// \t\t\timage: 'manicure.jpg',\n\t// \t\t\tprice: 9000.0,\n\t// \t\t\tquantity: 500,\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\tname: 'Node Nails- Pedicure',\n\t// \t\t\t// category: categories[1]._id,\n\t// \t\t\tdescription:\n\t// \t\t\t\t'Vivamus ut turpis in purus pretium mollis. Donec turpis odio, semper vel interdum ut, vulputate at ex. Duis dignissim nisi vel tortor imperdiet finibus. Aenean aliquam sagittis rutrum.',\n\t// \t\t\timage: 'pedicure.jpg',\n\t// \t\t\tprice: 9000.0,\n\t// \t\t\tquantity: 500,\n\t// \t\t},\n\t// \t]);\n\n\t//const currentPhotos = photos.filter((photo) => photo.category === category);\n\n\t// const toggleModal = (image, i) => {\n\t// \tsetCurrentPhoto({ ...image, index: i });\n\t// \tsetIsModalOpen(!isModalOpen);\n\t// };\n\n\t//Carousel Buttons Logic\n\tvar slidePosition = 0;\n\tSlideShow(slidePosition);\n\n\t// // forward/Back controls\n\t// function plusSlides(n) {\n\t// \tSlideShow((slidePosition += n));\n\t// }\n\n\t// //  images controls\n\t// function currentSlide(n) {\n\t// \tSlideShow((slidePosition = n));\n\t// }\n\n\t// var slidePosition = 1;\n\t// SlideShow();\n\n\tfunction SlideShow() {\n\t\tvar i;\n\t\tvar slides = document.getElementsByClassName('Containers');\n\t\tfor (i = 0; i < slides.length; i++) {\n\t\t\tslides[i].style.display = 'none';\n\t\t\tslides[slidePosition - 1].style.display = 'block';\n\t\t}\n\t\tslidePosition++;\n\t\tif (slidePosition > slides.length) {\n\t\t\tslidePosition = 1;\n\t\t}\n\t\tsetTimeout(SlideShow, 3500); // Change image every 2 seconds\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t{/* <!-- Slideshow container --> */}\n\t\t\t\t<div className=\"slideshow-container fade\">\n\t\t\t\t\t{/* <!-- Full images with numbers and message Info --> */}\n\t\t\t\t\t<div className=\"Containers\">\n\t\t\t\t\t\t<Link to=\"/services\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={'../Images/mongoosemassage.jpg'}\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\talt=\"mongoose massage\"\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t<div className=\"Info\">Mongoose Massage</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Containers\">\n\t\t\t\t\t\t<Link to=\"/services\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={'../Images/expresseyebrowwax.jpg'}\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\talt=\"express eyebrow wax\"\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t<div className=\"Info\">Express Eyebrow Wax</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"Containers\">\n\t\t\t\t\t\t<Link to=\"/services\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={'../Images/reactfacial.jpg'}\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\t\talt=\"react facial\"\n\t\t\t\t\t\t\t></img>\n\t\t\t\t\t\t\t<div className=\"Info\">React Facial</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{/* <!-- Back and forward buttons -->\n\t\t\t\t\t<Link className=\"Back\" onClick={() => plusSlides(-1)} />\n\t\t\t\t\t&#10094;\n\t\t\t\t\t<Link className=\"forward\" onClick={() => plusSlides(1)} />\n\t\t\t\t\t&#10095; */}\n\t\t\t\t</div>\n\t\t\t\t<br />\n\n\t\t\t\t{/* <!-- The circles/dots --> */}\n\t\t\t\t{/* <div style={{ textAlign: 'center' }}>\n\t\t\t\t\t<span className=\"dots\" onClick={currentSlide(1)}></span>\n\t\t\t\t\t<span className=\"dots\" onClick={currentSlide(2)}></span>\n\t\t\t\t\t<span className=\"dots\" onClick={currentSlide(3)}></span>\n\t\t\t\t</div> */}\n\t\t\t\t{/* {isModalOpen && (\n\t\t\t\t<Modal onClose={toggleModal} currentPhoto={currentPhoto} />\n\t\t\t)} */}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default PhotoList;","import React from 'react';\n\nimport Jumbotron from '../components/Jumbotron';\nimport Contact from '../components/Contact';\nimport Gallery from '../components/Gallery';\n\n//import Auth from '../utils/auth'\n\nconst Home = () => {\n\t//const loggedIn = Auth.loggedIn()\n\n\treturn (\n\t\t<main>\n\t\t\t<div className=\"jumbotron\">\n\t\t\t\t<Jumbotron />\n\t\t\t</div>\n\t\t\t<div className=\"intro\">\n\t\t\t\t<h2 className=\"section-title\">Our Philosophy</h2>\n\t\t\t\t<p>\n\t\t\t\t\tOur belief is that there's no stack better than the MERN stack, and we have the services to prove it. Check out our services below to get an idea of what we offer. Also remember to view our products to work out the knots in your app.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"slideshow\">\n\t\t\t\t<h2 className=\"section-title\">Our Services</h2>\n\n\t\t\t\t<Gallery />\n\t\t\t</div>\n\t\t\t<footer className=\"footer\">\n\t\t\t\t<Contact />\n\t\t\t\t<div className=\"footer-title\">\n\t\t\t\t<h4>Brought to you by the good folks at MERN Spa</h4>\n\t\t\t\t</div>\n\t\t\t</footer>\n\t\t</main>\n\t);\n};\n\nexport default Home;\n","export const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\nexport const UPDATE_SERVICES = 'UPDATE_SERVICES';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n\nexport const UPDATE_CATEGORIES = 'UPDATE_CATEGORIES';\nexport const UPDATE_CURRENT_CATEGORY = 'UPDATE_CURRENT_CATEGORY';\n","import { useReducer } from 'react';\nimport {\n\tUPDATE_PRODUCTS,\n\tUPDATE_SERVICES,\n\tADD_TO_CART,\n\tUPDATE_CART_QUANTITY,\n\tREMOVE_FROM_CART,\n\tADD_MULTIPLE_TO_CART,\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n\tCLEAR_CART,\n\tTOGGLE_CART,\n} from './actions';\n\nexport const init = (initialState) => {\n\treturn {state: initialState}\n}\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_PRODUCTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: [...action.products],\n\t\t\t};\n\n\t\tcase UPDATE_SERVICES:\n\t\t\tconsole.log('action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tservices: [...action.services],\n\t\t\t};\n\n\t\tcase ADD_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: [...state.cart, action.products, action.services],\n\t\t\t};\n\n\t\tcase ADD_MULTIPLE_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: [...action.products],\n\t\t\t};\n\n\t\tcase UPDATE_CART_QUANTITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: state.cart.map(\n\t\t\t\t\t(product) => {\n\t\t\t\t\t\tif (action._id === product._id) {\n\t\t\t\t\t\t\tproduct.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn product;\n\t\t\t\t\t},\n\t\t\t\t\t(service) => {\n\t\t\t\t\t\tif (action._id === service._id) {\n\t\t\t\t\t\t\tservice.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet newState = state.cart.filter(\n\t\t\t\t(product) => {\n\t\t\t\t\treturn product._id !== action._id;\n\t\t\t\t},\n\t\t\t\t(service) => {\n\t\t\t\t\treturn service._id !== action._id;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: newState.length > 0,\n\t\t\t\tcart: newState,\n\t\t\t};\n\n\t\tcase CLEAR_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: false,\n\t\t\t\tcart: [],\n\t\t\t};\n\n\t\tcase TOGGLE_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: !state.cartOpen,\n\t\t\t};\n\n\t\tcase UPDATE_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.categories],\n\t\t\t};\n\n\t\tcase UPDATE_CURRENT_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentCategory: action.currentCategory,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn init(state);\n\t}\n};\n\nexport function useStoreReducer(initialState) {\n\treturn useReducer(reducer, initialState, init);\n}\n","import React, { createContext, useContext } from 'react';\nimport { useStoreReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n\tconst [state, dispatch] = useStoreReducer({\n\t\tproducts: [],\n\t\tservices: [],\n\t\tcart: [],\n\t\tcartOpen: false,\n\t\tcategories: [],\n\t\tcurrentCategory: '',\n\t});\n\n\treturn <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n\treturn useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div className=\"card-info\">\n        <div>\n          {quantity} {pluralize(\"item\", quantity)} in stock\n        </div>\n        <span>${price}</span>\n      </div>\n      <div className=\"card-btn\">\n        <button onClick={addToCart}>Add to cart</button>  \n      </div>\n      \n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n\tquery getProducts($category: ID) {\n\t\tproducts(category: $category) {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\timage\n\t\t\tcategory {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_SERVICES = gql`\n\tquery getServices($category: ID) {\n\t\tservices(category: $category) {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\timage\n\t\t\tcategory {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n\tquery getCheckout($products: [ID]!, $services: [ID]!) {\n\t\tcheckout(products: $products, services: $services) {\n\t\t\tsession\n\t\t}\n\t}\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n\t{\n\t\tproducts {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_ALL_SERVICES = gql`\n\t{\n\t\tservices {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CATEGORIES = gql`\n\t{\n\t\tcategories {\n\t\t\t_id\n\t\t\tname\n\t\t}\n\t}\n`;\n\nexport const QUERY_USER = gql`\n\t{\n\t\tuser {\n\t\t\tfirstName\n\t\t\tusername\n\t\t\torders {\n\t\t\t\t_id\n\t\t\t\tpurchaseDate\n\t\t\t\tproducts {\n\t\t\t\t\t_id\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tquantity\n\t\t\t\t\timage\n\t\t\t\t}\n\t\t\t\tservices {\n\t\t\t\t\t_id\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tquantity\n\t\t\t\t\timage\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  // function renderProducts(productsArr) {\n  //   console.log(productsArr)\n  //   let filteredArr = filterProducts(productsArr)\n  //   if (!filteredArr){\n  //     return <h2>No productsArr</h2>\n  //   }\n  //   filteredArr.map(product => {\n  //     if(!product){\n  //       return <h2>No products in productsArr</h2>\n  //     } \n  //       return <ProductItem\n  //         key={product._id}\n  //         _id={product._id}\n  //         image={product.image}\n  //         name={product.name}\n  //         price={product.price}\n  //         quantity={product.quantity}\n  //         />\n      \n  //   })\n  // }\n  return (\n    <div className=\"detailedView\">\n      <h2 className='section-title'>Our Products:</h2>\n      {state.products ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\tconst [state, dispatch] = useStoreContext();\n\tconst [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tstripePromise.then((res) => {\n\t\t\t\tres.redirectToCheckout({ sessionId: data.checkout.session });\n\t\t\t});\n\t\t}\n\t}, [data]);\n\n\tuseEffect(() => {\n\t\tconsole.log('inside cart useEffect');\n\t\tasync function getCart() {\n\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_MULTIPLE_TO_CART,\n\t\t\t\tproducts: [...cart]\n\t\t\t});\n\t\t}\n\n\t\tif (!state.cart) {\n\t\t\tgetCart();\n\t\t}\n\t}, [state.cart, dispatch]);\n\n\tfunction toggleCart() {\n\t\tdispatch({ type: TOGGLE_CART });\n\t}\n\n\tfunction calculateTotal() {\n\t\tlet sum = 0;\n\t\tstate.cart.forEach((item) => {\n\t\t\tsum += item.price * item.purchaseQuantity;\n\t\t});\n\t\treturn sum.toFixed(2);\n\t}\n\n\tfunction submitCheckout() {\n\t\tconst productIds = [];\n\n\t\tstate.cart.forEach((item) => {\n\t\t\tfor (let i = 0; i < item.purchaseQuantity; i++) {\n\t\t\t\tproductIds.push(item._id);\n\t\t\t}\n\t\t});\n\n\t\tgetCheckout({\n\t\t\tvariables: { products: productIds },\n\t\t});\n\t}\n\n\tif (!state.cartOpen) {\n\t\treturn (\n\t\t\t<div className=\"cart-closed\" onClick={toggleCart}>\n\t\t\t\t<span role=\"img\" aria-label=\"trash\">\n\t\t\t\t\t🛒\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\tconsole.log('state cart', state.cart);\n\n\t// function renderCartItem(){\n\t// \tif(!state.cart.length) {\n\t// \t\treturn <h2>No cartArr</h2>\n\t// \t}\n\t// \tstate.cart.map(item => {\n\t// \t\tif(!item){\n\t// \t\t\treturn <h2>No items in cartArr</h2>\n\t// \t\t} else {\n\t// \t\t\treturn <CartItem key={item._id} item={item} />\n\t// \t\t}\n\t// \t})\n\t// }\n\n\treturn (\n\t\t<div className=\"cart\">\n\t\t\t<div className=\"close\" onClick={toggleCart}>\n\t\t\t\t[close]\n\t\t\t</div>\n\t\t\t<h2>Shopping Cart</h2>\n\t\t\t{state.cart ? (\n\t\t\t\t<div>\n\t\t\t\t\t{state.cart.map((item) => (\n\t\t\t\t\t\t<CartItem key={item._id} item={item} />\n\t\t\t\t\t))}\n\n\t\t\t\t\t<div className=\"flex-row space-between\">\n\t\t\t\t\t\t<strong>Total: ${calculateTotal()}</strong>\n\n\t\t\t\t\t\t{Auth.loggedIn() ? (\n\t\t\t\t\t\t\t<button onClick={submitCheckout}>Checkout</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span> (log in to check out)</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>\n\t\t\t\t\t<span role=\"img\" aria-label=\"shocked\">\n\t\t\t\t\t\t😱\n\t\t\t\t\t</span>\n\t\t\t\t\tYou haven't added anything to your cart yet!\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Cart;\n","import React from 'react';\nimport ProductList from '../components/ProductList';\n//import CategoryMenu from '../components/CategoryMenu';\nimport Cart from '../components/Cart';\n\nconst ProdList = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<ProductList />\n\t\t\t<Cart />\n\t\t</div>\n\t);\n};\n\nexport default ProdList;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n\t//REMOVE_FROM_CART,\n\tUPDATE_CART_QUANTITY,\n\tADD_TO_CART,\n\tUPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction ProductDetail() {\n\tconst [state, dispatch] = useStoreContext();\n\tconst { id } = useParams();\n\n\tconst [currentProduct, setCurrentProduct] = useState({});\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tconst { products, cart } = state;\n\n\tuseEffect(() => {\n\t\t// already in global store\n\t\tif (products.length) {\n\t\t\tsetCurrentProduct(products.find((product) => product._id === id));\n\t\t}\n\t\t// retrieved from server\n\t\telse if (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\tproducts: data.products,\n\t\t\t});\n\n\t\t\tdata.products.forEach((product) => {\n\t\t\t\tidbPromise('products', 'put', product);\n\t\t\t});\n\t\t}\n\t\t// get cache from idb\n\t\telse if (!loading) {\n\t\t\tidbPromise('products', 'get').then((indexedProducts) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\tproducts: indexedProducts,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [products, data, loading, dispatch, id]);\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tproduct: { ...currentProduct, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\t// const removeFromCart = () => {\n\t// \tdispatch({\n\t// \t\ttype: REMOVE_FROM_CART,\n\t// \t\t_id: currentProduct._id,\n\t// \t});\n\n\t// \tidbPromise('cart', 'delete', { ...currentProduct });\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t{currentProduct && cart ? (\n\t\t\t\t<div className=\"detailedView my-1\">\n\t\t\t\t\t<Link to=\"/products\">← Back to Products</Link>\n\n\t\t\t\t\t<h2 className='detailed-title'>{currentProduct.name}</h2>\n\n\t\t\t\t\t\n\t\t\t\t\t<div className='detailedImgContainer'>\n\t\t\t\t\t\t<img className='detailedImg'\n\t\t\t\t\t\t\tsrc={`/images/${currentProduct.image}`}\n\t\t\t\t\t\t\talt={currentProduct.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='description'>\n\t\t\t\t\t\t<p>{currentProduct.description}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='detailedFooter'>\n\t\t\t\t\t\t<strong>Price:</strong>${currentProduct.price}{' '}\n\t\t\t\t\t\t<button onClick={addToCart}>Add to Cart</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t\t<Cart />\n\t\t</>\n\t);\n}\n\nexport default ProductDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ServiceItem(item) {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { image, name, _id, price, quantity } = item;\n\n\tconst { cart } = state;\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: _id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tservice: { ...item, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"card px-1 py-1\">\n\t\t\t<Link to={`/services/${_id}`}>\n\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t<p>{name}</p>\n\t\t\t</Link>\n\t\t\t<div className=\"card-info\">\n        \t\t<div>\n          \t\t\t{quantity} {pluralize(\"item\", quantity)} in stock\n        \t\t</div>\n        \t\t<span>${price}</span>\n      \t\t</div>\n      \t\t<div className=\"card-btn\">\n        \t\t<button onClick={addToCart}>Add to cart</button>\n      \t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ServiceItem;\n","import React, { useEffect } from 'react';\nimport ServiceItem from '../ServiceItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_SERVICES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SERVICES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n//import { useStoreReducer } from '../../utils/reducers';\n\nfunction ServiceList() {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { currentCategory } = state;\n\n\tconst { loading, data } = useQuery(QUERY_SERVICES);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tconsole.log('data is here', data);\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\tservices: data.services,\n\t\t\t});\n\t\t\tdata.services.forEach((service) => {\n\t\t\t\tidbPromise('services', 'put', service);\n\t\t\t});\n\t\t}\n\t\telse if (!loading) {\n\t\t\tconsole.log('data', data);\n\t\t\tidbPromise('services', 'get').then((services) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\t\tservices: services,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [data, loading, dispatch]);\n\n\tfunction filterServices() {\n\t\tif (!currentCategory) {\n\t\t\treturn state.services;\n\t\t}\n\n\t\treturn state.services.filter(\n\t\t\t(service) => service.category._id === currentCategory\n\t\t);\n\t}\n\n\t// function renderServices(servicesArr) {\n\t// \tif(!servicesArr){\n\t// \t\treturn <h2>No servicesArr</h2>\n\t// \t}\n\t// \tfilterServices(servicesArr).map(service => {\n\t// \t\tif(!service){\n\t// \t\t\treturn <h2>No services in serviceArr</h2>\n\t// \t\t} else {\n\t// \t\t\treturn <ServiceItem\n\t// \t\t\tkey={service._id}\n\t// \t\t\t_id={service._id}\n\t// \t\t\timage={service.image}\n\t// \t\t\tname={service.name}\n\t// \t\t\tprice={service.price}\n\t// \t\t\tquantity={service.quantity}\n\t// \t\t\t/>\n\t// \t\t}\n\t// \t})\n\t// }\n\n\treturn (\n\t\t<div className=\"my-2\">\n\t\t\t<h2 className='section-title'>Our services:</h2>\n\t\t\t{state.services ? (\n\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t{filterServices().map((service) => (\n\t\t\t\t\t\t<ServiceItem\n\t\t\t\t\t\t\tkey={service._id}\n\t\t\t\t\t\t\t_id={service._id}\n\t\t\t\t\t\t\timage={service.image}\n\t\t\t\t\t\t\tname={service.name}\n\t\t\t\t\t\t\tprice={service.price}\n\t\t\t\t\t\t\tquantity={service.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any services yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t</div>\n\t);\n}\n\nexport default ServiceList;\n","import React from 'react';\nimport ServiceList from '../components/ServiceList';\n//import CategoryMenu from '../components/CategoryMenu';\nimport Cart from '../components/Cart';\n\nconst ServList = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<ServiceList />\n\t\t\t<Cart />\n\t\t</div>\n\t);\n};\n\nexport default ServList;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n\t//REMOVE_FROM_CART,\n\tUPDATE_CART_QUANTITY,\n\tADD_TO_CART,\n\tUPDATE_SERVICES,\n} from '../utils/actions';\nimport { QUERY_SERVICES } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction ServiceDetail() {\n\tconst [state, dispatch] = useStoreContext();\n\tconst { id } = useParams();\n\n\tconst [currentService, setCurrentService] = useState({});\n\n\tconst { loading, data } = useQuery(QUERY_SERVICES);\n\n\tconst { services, cart } = state;\n\n\tuseEffect(() => {\n\t\t// already in global store\n\t\tif (services.length) {\n\t\t\tsetCurrentService(services.find((service) => service._id === id));\n\t\t}\n\t\t// retrieved from server\n\t\telse if (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\tservices: data.services,\n\t\t\t});\n\n\t\t\tdata.services.forEach((service) => {\n\t\t\t\tidbPromise('services', 'put', service);\n\t\t\t});\n\t\t}\n\t\t// get cache from idb\n\t\telse if (!loading) {\n\t\t\tidbPromise('services', 'get').then((indexedServices) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\t\tservices: indexedServices,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [services, data, loading, dispatch, id]);\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tservice: { ...currentService, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...currentService, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\t// const removeFromCart = () => {\n\t// \tdispatch({\n\t// \t\ttype: REMOVE_FROM_CART,\n\t// \t\t_id: currentService._id,\n\t// \t});\n\n\t// \tidbPromise('cart', 'delete', { ...currentService });\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t{currentService && cart ? (\n\t\t\t\t<div className=\"detailedView my-1\">\n\t\t\t\t\t<Link to=\"/services\">← Back to Services</Link>\n\n\t\t\t\t\t<h2 className='detailed-title'>{currentService.name}</h2>\n\n\t\t\t\t\t\n\t\t\t\t\t<div className='detailedImgContainer'>\n\t\t\t\t\t\t<img className='detailedImg'\n\t\t\t\t\t\t\tsrc={`/images/${currentService.image}`}\n\t\t\t\t\t\t\talt={currentService.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='description'>\n\t\t\t\t\t\t<p>{currentService.description}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='detailedFooter'>\n\t\t\t\t\t\t<strong>Price:</strong>${currentService.price}{' '}\n\t\t\t\t\t\t<button onClick={addToCart}>Add to Cart</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t\t<Cart />\n\t\t</>\n\t);\n}\n\nexport default ServiceDetail;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n\tmutation login($email: String!, $password: String!) {\n\t\tlogin(email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_ORDER = gql`\n\tmutation addOrder($products: [ID]!, $services: [ID]!) {\n\t\taddOrder(products: $products, services: $services) {\n\t\t\tpurchaseDate\n\t\t\tproducts {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tcategory {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tservices {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tcategory {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_USER = gql`\n\tmutation addUser(\n\t\t$firstName: String!\n\t\t$username: String!\n\t\t$email: String!\n\t\t$password: String!\n\t) {\n\t\taddUser(\n\t\t\tfirstName: $firstName\n\t\t\tusername: $username\n\t\t\temail: $email\n\t\t\tpassword: $password\n\t\t) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, \n          password: formState.password },\n      });\n      console.log(mutationResponse)\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"detailedView\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <h2 className='form-header'>Login</h2>\n        </div>\n        <div className=\"text-input\">\n          <label className='text-label' htmlFor=\"email\">Email:</label>\n          <input\n            className='text-input'\n            placeholder=\"email@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"text-input\">\n          <label className='text-label' htmlFor=\"pwd\">Password:</label>\n          <input\n            className='text-input'\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n\n          <button type=\"submit\">Submit</button>\n        \n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        username: formState.username,\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n      },\n    });\n    console.log(mutationResponse)\n    const token = mutationResponse.data.addUser.token;\n    \n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"detailedView\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <form onSubmit={handleFormSubmit}>\n        <div>\n        <h2 className='form-header'>Signup</h2>\n        </div>\n        <div className=\"text-input\">\n          <label className='text-label' htmlFor=\"username\">Username:</label>\n          <input\n            className='text-input'\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"text-input\">\n          <label className='text-label' htmlFor=\"firstName\">Name:</label>\n          <input\n            className='text-input'\n            placeholder=\"Your name\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"text-input\">\n          <label className='text-label' htmlFor=\"email\">Email:</label>\n          <input\n            className='text-input'\n            placeholder=\"email@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"text-input\">\n          <label className='text-label' htmlFor=\"pwd\">Password:</label>\n          <input\n          className='text-input'\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n\n          <button type=\"submit\">Submit</button>\n\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row flex-end\">\n          <li className='mx-1'>\n            <Link to='/products'>\n              Shop\n            </Link>\n          </li>\n          <li className='mx-1'>\n            <Link to='/services'>\n              Services\n            </Link>\n          </li>\n\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className='mx-1'>\n            <Link to='/products'>\n              Shop\n            </Link>\n          </li>\n          <li className='mx-1'>\n            <Link to='/services'>\n              Services\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          MERN Spa\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n\tconst [addOrder] = useMutation(ADD_ORDER);\n\n\tuseEffect(() => {\n\t\tasync function saveOrder() {\n\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\tconst products = cart.map((item) => item._id);\n\t\t\tconst services = cart.map((item) => item._id);\n\n\t\t\tif (products.length) {\n\t\t\t\tconst { data } = await addOrder({ variables: { products } });\n\t\t\t\tconst productData = data.addOrder.products;\n\n\t\t\t\tproductData.forEach((item) => {\n\t\t\t\t\tidbPromise('cart', 'delete', item);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (services.length) {\n\t\t\t\tconst { data } = await addOrder({ variables: { services } });\n\t\t\t\tconst serviceData = data.addOrder.cervices;\n\n\t\t\t\tserviceData.forEach((item) => {\n\t\t\t\t\tidbPromise('cart', 'delete', item);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location.assign('/');\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsaveOrder();\n\t}, [addOrder]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Jumbotron>\n\t\t\t\t<h1>Success!</h1>\n\t\t\t\t<h2>Thank you for your purchase!</h2>\n\t\t\t\t<h2>You will now be redirected to the home page</h2>\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n\tconst { data } = useQuery(QUERY_USER);\n\tlet user;\n\n\tif (data) {\n\t\tuser = data.user;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container my-1\">\n\t\t\t\t<Link to=\"/\">← Back to Products</Link>\n\n\t\t\t\t{user ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tOrder History for {user.username} \n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{user.orders.map((order) => (\n\t\t\t\t\t\t\t<div key={order._id} className=\"my-2\">\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t\t\t\t\t{order.products.map(({ _id, image, name, price }, index) => (\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"card px-1 py-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/products/${_id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>${price}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{order.services.map(({ _id, image, name, price }, index) => (\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"card px-1 py-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/services/${_id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>${price}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloProvider,\n\tcreateHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport ProdList from './pages/ProductList';\nimport ProductDetail from './pages/ProductDetail';\nimport ServList from './pages/ServiceList';\nimport ServiceDetail from './pages/ServiceDetail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\n//import Cart from './components/Cart'\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n\turi: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('id_token');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t<Route path=\"/login\" element={<Login />} />\n\t\t\t\t\t\t\t<Route path=\"/signup\" element={<Signup />} />\n\t\t\t\t\t\t\t<Route path=\"/success\" element={<Success />} />\n\t\t\t\t\t\t\t<Route path=\"/orderHistory\" element={<OrderHistory />} />\n\t\t\t\t\t\t\t<Route path=\"/products\" element={<ProdList />} />\n\t\t\t\t\t\t\t<Route path=\"/products/:id\" element={<ProductDetail />} />\n\t\t\t\t\t\t\t<Route path=\"/services\" element={<ServList />} />\n\t\t\t\t\t\t\t<Route path=\"/services/:id\" element={<ServiceDetail />} />\n\t\t\t\t\t\t\t<Route path=\"*\" element={<NoMatch />} />\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}