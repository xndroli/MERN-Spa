{"version":3,"sources":["utils/helpers.js","components/Contact/index.js","components/Jumbotron/index.js","pages/Home.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/ProductList.js","pages/ProductDetail.js","components/ServiceItem/index.js","components/ServiceList/index.js","pages/ServiceList.js","pages/ServiceDetail.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ContactForm","useState","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","target","isValid","test","String","toLowerCase","validateEmail","value","length","className","id","onSubmit","preventDefault","htmlFor","type","defaultValue","onBlur","rows","Jumbotron","children","Contact","Home","UPDATE_PRODUCTS","UPDATE_SERVICES","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","init","initialState","state","reducer","action","products","services","cartOpen","cart","product","map","purchaseQuantity","service","newState","filter","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_SERVICES","QUERY_CHECKOUT","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","CartItem","placeholder","onChange","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","ProdList","ProductDetail","useParams","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","ServiceItem","ServiceList","ServList","ServiceDetail","currentService","setCurrentService","indexedServices","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","password","useMutation","login","error","handleFormSubmit","event","mutationResponse","Signup","addUser","username","firstName","Nav","href","logout","Success","addOrder","cervices","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iTAAO,SAASA,EAAUC,EAAMC,GAC/B,OAAc,IAAVA,EACID,EAEDA,EAAO,GACd,CAQM,SAASE,EAAWC,EAAWC,EAAQC,GAC7C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC5B,IACIC,EAAIC,EAAIC,EADNC,EAAUC,OAAOC,UAAUC,KAAK,YAAa,GAEnDH,EAAQI,gBAAkB,SAAUC,GACnC,IAAMR,EAAKG,EAAQM,OACnBT,EAAGU,kBAAkB,WAAY,CAAEC,QAAS,QAC5CX,EAAGU,kBAAkB,WAAY,CAAEC,QAAS,QAC5CX,EAAGU,kBAAkB,aAAc,CAAEC,QAAS,QAC9CX,EAAGU,kBAAkB,OAAQ,CAAEC,QAAS,OACxC,EAEDR,EAAQS,QAAU,SAAUJ,GAC3BK,QAAQC,IAAI,qBACZ,EAEDX,EAAQY,UAAY,SAAUP,GAS7B,OARAR,EAAKG,EAAQM,OACbR,EAAKD,EAAGgB,YAAYtB,EAAW,aAC/BQ,EAAQD,EAAGgB,YAAYvB,GAEvBM,EAAGY,QAAU,SAAUJ,GACtBK,QAAQC,IAAI,QAASN,EACrB,EAEOb,GACP,IAAK,MACJO,EAAMgB,IAAItB,GACVE,EAAQF,GACR,MACD,IAAK,MACJ,IAAMuB,EAAMjB,EAAMkB,SAClBD,EAAIJ,UAAY,WACfjB,EAAQqB,EAAIV,OACZ,EACD,MACD,IAAK,SACJP,EAAMmB,OAAOzB,EAAO0B,KACpB,MACD,QACCT,QAAQC,IAAI,mBAIdb,EAAGsB,WAAa,WACfvB,EAAGwB,OACH,CACD,CACD,GACD,C,WCqBcC,MA/Ef,WAIE,MAAkCC,mBAAS,CAAEnC,KAAM,GAAIoC,MAAO,GAAIC,QAAS,KAA3E,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAGQzC,EAAyBsC,EAAzBtC,KAAMoC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAWfK,EAAe,SAACzB,GAEpB,GAAsB,UAAlBA,EAAE0B,OAAO3C,KAAkB,CAC7B,IAAM4C,EDpBL,SAAuBR,GAE7B,MADS,wJACCS,KAAKC,OAAOV,GAAOW,cAC3B,CCiBmBC,CAAc/B,EAAE0B,OAAOM,OAKrCR,EAHGG,EAGa,GAFA,yBAInB,MAEM3B,EAAE0B,OAAOM,MAAMC,OAGlBT,EAAgB,IAFhBA,EAAgB,GAAD,OAAIxB,EAAE0B,OAAO3C,KAAb,kBAOdwC,IACHD,EAAa,2BAAKD,GAAN,kBAAkBrB,EAAE0B,OAAO3C,KAAOiB,EAAE0B,OAAOM,SACvD3B,QAAQC,IAAI,cAAee,GAE9B,EAQD,OACE,0BAASa,UAAU,OAAnB,UACE,oBAAI,cAAY,QAAhB,wBACA,uBAAMC,GAAG,eAAeC,SA5CP,SAACpC,GACpBA,EAAEqC,iBACGd,GACHlB,QAAQC,IAAI,cAAee,EAE9B,EAuCG,UACE,gCACE,uBAAOa,UAAU,aAAaI,QAAQ,OAAtC,mBACA,uBAAOJ,UAAU,aAAaK,KAAK,OAAOxD,KAAK,OAAOyD,aAAczD,EAAM0D,OAAQhB,OAEpF,gCACE,uBAAOS,UAAU,aAAaI,QAAQ,QAAtC,4BACA,uBAAOJ,UAAU,aAAaK,KAAK,QAAQxD,KAAK,QAAQyD,aAAcrB,EAAOsB,OAAQhB,OAEvF,gCACE,uBAAOS,UAAU,aAAaI,QAAQ,UAAtC,sBACA,0BAAUJ,UAAU,aAAcnD,KAAK,UAAU2D,KAAK,IAAIF,aAAcpB,EAASqB,OAAQhB,OAE1FF,GACC,8BACE,mBAAGW,UAAU,aAAb,SAA2BX,MAG/B,wBAAQ,cAAY,SAASgB,KAAK,SAAlC,yBAIP,E,MC3DcI,MAjBf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OACE,sBACEV,UAAU,YADZ,UAGE,sBAAKA,UAAU,gBAAf,UACGU,EACD,0DACA,8EAEF,qBAAKV,UAAU,iBAAf,SACE,cAACW,EAAD,QAIP,ECMcC,EAnBF,WAIZ,OACA,iCACC,qBAAKZ,UAAU,YAAf,SACC,cAAC,EAAD,MAGD,sBAAKA,UAAU,QAAf,UACC,oBAAIA,UAAU,gBAAd,4BACA,sIAKF,E,gBCxBYa,EAAkB,kBAClBC,EAAkB,kBAElBC,EAAc,cACdC,EAAuB,uBACvBC,EAAmB,mBAEnBC,EAAuB,uBACvBC,EAAc,cAEdC,EAAoB,oBACpBC,EAA0B,0BCG1BC,EAAO,SAACC,GACpB,MAAO,CAACC,MAAOD,EACf,EACYE,EAAU,SAACD,EAAOE,GAC9B,OAAQA,EAAOrB,MACd,KAAKQ,EACJ,OAAO,2BACHW,GADJ,IAECG,SAAS,YAAKD,EAAOC,YAGvB,KAAKb,EAEJ,OADA3C,QAAQC,IAAI,SAAUsD,GACf,2BACHF,GADJ,IAECI,SAAS,YAAKF,EAAOE,YAGvB,KAAKb,EACJ,OAAO,2BACHS,GADJ,IAECK,UAAU,EACVC,KAAK,GAAD,mBAAMN,EAAMM,MAAZ,CAAkBJ,EAAOK,QAASL,EAAOE,aAG/C,KAAKZ,EACJ,OAAO,2BACHQ,GADJ,IAECM,KAAK,GAAD,mBAAOJ,EAAOC,UAAd,YAA2BD,EAAOE,aAGxC,KAAKV,EACJ,OAAO,2BACHM,GADJ,IAECK,UAAU,EACVC,KAAMN,EAAMM,KAAKE,KAChB,SAACD,GAIA,OAHIL,EAAO9C,MAAQmD,EAAQnD,MAC1BmD,EAAQE,iBAAmBP,EAAOO,kBAE5BF,CACP,IACD,SAACG,GAIA,OAHIR,EAAO9C,MAAQsD,EAAQtD,MAC1BsD,EAAQD,iBAAmBP,EAAOO,kBAE5BC,CACP,MAIJ,KAAKjB,EACJ,IAAIkB,EAAWX,EAAMM,KAAKM,QACzB,SAACL,GACA,OAAOA,EAAQnD,MAAQ8C,EAAO9C,GAC9B,IACD,SAACsD,GACA,OAAOA,EAAQtD,MAAQ8C,EAAO9C,GAC9B,IAGF,OAAO,2BACH4C,GADJ,IAECK,SAAUM,EAASpC,OAAS,EAC5B+B,KAAMK,IAGR,ID3EwB,aC4EvB,OAAO,2BACHX,GADJ,IAECK,UAAU,EACVC,KAAM,KAGR,KAAKX,EACJ,OAAO,2BACHK,GADJ,IAECK,UAAWL,EAAMK,WAGnB,KAAKT,EACJ,OAAO,2BACHI,GADJ,IAECa,WAAW,YAAKX,EAAOW,cAGzB,KAAKhB,EACJ,OAAO,2BACHG,GADJ,IAECc,gBAAiBZ,EAAOY,kBAG1B,QACC,OAAOhB,EAAKE,GAEd,E,gBC1GKe,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA6B,EAA3B5C,MAA4B,IDyGrByB,ECzGQoB,EAAY,iBACnD,GDwG+BpB,ECxGW,CACzCI,SAAU,GACVC,SAAU,GACVE,KAAM,GACND,UAAU,EACVQ,WAAY,GACZC,gBAAiB,IDmGXM,qBAAWnB,EAASF,EAAcD,ICzGzC,mBAAOE,EAAP,KAAcqB,EAAd,KASA,OAAO,cAACJ,EAAD,aAAU3C,MAAO,CAAC0B,EAAOqB,IAAeF,GAC/C,EAEKG,EAAkB,WACvB,OAAOC,qBAAWR,EAClB,ECsCcS,I,cAAAA,EApDf,SAAqBC,GACnB,MAA0BH,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KAGEK,EAKED,EALFC,MACArG,EAIEoG,EAJFpG,KACA+B,EAGEqE,EAHFrE,IACAuE,EAEEF,EAFFE,MACAC,EACEH,EADFG,SAGMtB,EAASN,EAATM,KAuBR,OACE,sBAAK9B,UAAU,iBAAf,UACE,eAAC,IAAD,CAAMqD,GAAE,oBAAezE,GAAvB,UACE,qBACE0E,IAAKzG,EACL0G,IAAG,kBAAaL,KAElB,4BAAIrG,OAEN,gCACE,gCAAMuG,EAAN,IAAiBxG,EAAU,OAAQwG,GAAnC,eACA,qCAAQD,QAEV,wBAAQK,QAlCM,WAChB,IAAMC,EAAa3B,EAAK4B,MAAK,SAACC,GAAD,OAAcA,EAAS/E,MAAQA,CAA/B,IACzB6E,GACFZ,EAAS,CACPxC,KAAMa,EACNtC,IAAKA,EACLqD,iBAAkB2B,SAASH,EAAWxB,kBAAoB,IAE5DlF,EAAW,OAAQ,MAAT,YAAC,eACN0G,GADK,IAERxB,iBAAkB2B,SAASH,EAAWxB,kBAAoB,OAG5DY,EAAS,CACPxC,KAAMU,EACNgB,QAAQ,2BAAMkB,GAAP,IAAahB,iBAAkB,MAExClF,EAAW,OAAQ,MAAT,YAAC,eAAoBkG,GAArB,IAA2BhB,iBAAkB,KAE1D,EAeG,2BAGL,E,wBCvDY4B,EAAiBC,YAAH,+OAgBdC,EAAiBD,YAAH,+OAgBdE,GAAiBF,YAAH,4KA+CdG,IAvCqBH,YAAH,6KAeGA,YAAH,6KAeCA,YAAH,sFASHA,YAAH,6aCjFR,OAA0B,oCC0F1BI,OAjFf,WACE,MAA0BpB,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KAEQP,EAAoBd,EAApBc,gBAER,EAA0B6B,YAASN,GAA3BO,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAoDjB,OAlDAC,qBAAU,WACJD,GACFxB,EAAS,CACPxC,KAAMQ,EACNc,SAAU0C,EAAK1C,WAEjB0C,EAAK1C,SAAS4C,SAAQ,SAACxC,GACrBhF,EAAW,WAAY,MAAOgF,EAC/B,KACSqC,GACVrH,EAAW,WAAY,OAAOyH,MAAK,SAAC7C,GAClCkB,EAAS,CACPxC,KAAMQ,EACNc,SAAUA,GAEb,GAEJ,GAAE,CAAC0C,EAAMD,EAASvB,IAkCjB,sBAAK7C,UAAU,iBAAf,UACE,+CACCwB,EAAMG,SACL,qBAAK3B,UAAU,WAAf,UAlCCsC,EAIEd,EAAMG,SAASS,QACpB,SAACL,GAAD,OAAaA,EAAQ0C,SAAS7F,MAAQ0D,CAAtC,IAJOd,EAAMG,UAkCSK,KAAI,SAACD,GAAD,OACpB,cAAC,EAAD,CAEEnD,IAAKmD,EAAQnD,IACbsE,MAAOnB,EAAQmB,MACfrG,KAAMkF,EAAQlF,KACdsG,MAAOpB,EAAQoB,MACfC,SAAUrB,EAAQqB,UALbrB,EAAQnD,IAFK,MAYxB,qEAEDwF,EAAU,qBAAKb,IAAKmB,GAASpB,IAAI,YAAe,OAGtD,ECTcqB,I,mCCVAC,GAhEE,SAAC,GAAc,IAAZ3B,EAAW,EAAXA,KAElB,EAAqBH,IAAZD,EAAT,oBA+BA,OACE,sBAAK7C,UAAU,WAAf,UACE,8BACE,qBACEuD,IAAG,kBAAaN,EAAKC,OACrBI,IAAI,OAGR,gCACE,gCAAML,EAAKpG,KAAX,MAAoBoG,EAAKE,SACzB,gCACE,wCACA,uBACE9C,KAAK,SACLwE,YAAY,IACZ/E,MAAOmD,EAAKhB,iBACZ6C,SApCO,SAAChH,GAChB,IAAMgC,EAAQhC,EAAE0B,OAAOM,MACT,MAAVA,GACF+C,EAAS,CACPxC,KAAMY,EACNrC,IAAKqE,EAAKrE,MAEZ7B,EAAW,OAAQ,SAAT,eAAwBkG,MAGlCJ,EAAS,CACPxC,KAAMa,EACNtC,IAAKqE,EAAKrE,IACVqD,iBAAkB2B,SAAS9D,KAE7B/C,EAAW,OAAQ,MAAT,YAAC,eAAoBkG,GAArB,IAA2BhB,iBAAkB2B,SAAS9D,MAGnE,IAoBO,sBACEiF,KAAK,MACL,aAAW,QACXvB,QAAS,kBAlDI,SAAAP,GACrBJ,EAAS,CACPxC,KAAMY,EACNrC,IAAKqE,EAAKrE,MAEZ7B,EAAW,OAAQ,SAAT,eAAwBkG,GAEnC,CA2CwB+B,CAAe/B,EAArB,EAHX,wCAWT,E,sCCvBc,O,4FAzCb,WACE,OAAOgC,KAAOC,KAAKC,WACpB,G,sBAED,WAEE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,EACxC,G,4BAED,SAAeA,GACb,IAEE,OADgBH,KAAOG,GACXE,IAAMC,KAAKC,MAAQ,GAKhC,CAFC,MAAOC,GACP,OAAO,CACR,CACF,G,sBAED,WAEE,OAAOC,aAAaC,QAAQ,WAC7B,G,mBAED,SAAMC,GAEJF,aAAaG,QAAQ,WAAYD,GAEjClI,OAAOoI,SAASC,OAAO,IACxB,G,oBAED,WAEEL,aAAaM,WAAW,YAExBtI,OAAOoI,SAASC,OAAO,IACxB,K,MC9BGE,I,MAAgBC,aAAW,qCAkHlBC,GAhHF,WACZ,MAA0BrD,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KACA,EAAgCuD,aAAapC,IAA7C,mBAAOqC,EAAP,KAAsBhC,EAAtB,KAAsBA,KA0BtB,SAASiC,IACRzD,EAAS,CAAExC,KAAMc,GACjB,CAwBD,OAlDAmD,qBAAU,WACLD,GACH4B,GAAczB,MAAK,SAAC+B,GACnBA,EAAIC,mBAAmB,CAAEC,UAAWpC,EAAKqC,SAASC,SAClD,GAEF,GAAE,CAACtC,IAEJC,qBAAU,WAAM,wDAEf,+GACoBvH,EAAW,OAAQ,OADvC,OACO+E,EADP,OAECe,EAAS,CACRxC,KAAMW,EACNW,SAAS,YAAKG,GACdF,SAAS,YAAKE,KALhB,4CAFe,sBACf3D,QAAQC,IAAI,yBAUPoD,EAAMM,MAXI,mCAYd8E,EAED,GAAE,CAACpF,EAAMM,KAAMe,IA4BXrB,EAAMK,UASX1D,QAAQC,IAAI,aAAcoD,EAAMM,MAgB/B,sBAAK9B,UAAU,OAAf,UACC,qBAAKA,UAAU,QAAQwD,QAAS8C,EAAhC,qBAGA,+CACC9E,EAAMM,KACN,gCACEN,EAAMM,KAAKE,KAAI,SAACiB,GAAD,OACf,cAAC,GAAD,CAAyBA,KAAMA,GAAhBA,EAAKrE,IADL,IAIhB,sBAAKoB,UAAU,yBAAf,UACC,8CA3DL,WACC,IAAI6G,EAAM,EAIV,OAHArF,EAAMM,KAAKyC,SAAQ,SAACtB,GACnB4D,GAAO5D,EAAKE,MAAQF,EAAKhB,gBACzB,IACM4E,EAAIC,QAAQ,EACnB,CAqDqBC,MAEhBC,GAAKC,WACL,wBAAQzD,QAtDd,WACC,IAAM0D,EAAa,GAEnB1F,EAAMM,KAAKyC,SAAQ,SAACtB,GACnB,IAAK,IAAIkE,EAAI,EAAGA,EAAIlE,EAAKhB,iBAAkBkF,IAC1CD,EAAWE,KAAKnE,EAAKrE,IAEtB,IAEDyH,EAAY,CACXgB,UAAW,CAAE1F,SAAUuF,IAExB,EA0CK,sBAEA,+DAKH,+BACC,sBAAMnC,KAAK,MAAM,aAAW,UAA5B,0BADD,sDA7CD,qBAAK/E,UAAU,cAAcwD,QAAS8C,EAAtC,SACC,sBAAMvB,KAAK,MAAM,aAAW,QAA5B,2BAqDH,EC7GcuC,GATE,WAChB,OACC,sBAAKtH,UAAU,YAAf,UACC,cAAC,GAAD,IACA,cAAC,GAAD,MAGF,ECwGcuH,OApGf,WACC,MAA0BzE,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KACQ5C,EAAOuH,cAAPvH,GAER,EAA4CjB,mBAAS,CAAC,GAAtD,mBAAOyI,EAAP,KAAuBC,EAAvB,KAEA,EAA0BvD,YAASN,GAA3BO,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAET1C,EAAmBH,EAAnBG,SAAUG,EAASN,EAATM,KA2DlB,OAzDAwC,qBAAU,WAEL3C,EAAS5B,OACZ2H,EAAkB/F,EAAS+B,MAAK,SAAC3B,GAAD,OAAaA,EAAQnD,MAAQqB,CAA7B,KAGxBoE,GACRxB,EAAS,CACRxC,KAAMQ,EACNc,SAAU0C,EAAK1C,WAGhB0C,EAAK1C,SAAS4C,SAAQ,SAACxC,GACtBhF,EAAW,WAAY,MAAOgF,EAC9B,KAGQqC,GACTrH,EAAW,WAAY,OAAOyH,MAAK,SAACmD,GACnC9E,EAAS,CACRxC,KAAMQ,EACNc,SAAUgG,GAEX,GAEF,GAAE,CAAChG,EAAU0C,EAAMD,EAASvB,EAAU5C,IAiCtC,qCACEwH,GAAkB3F,EAClB,sBAAK9B,UAAU,iBAAf,UACC,cAAC,IAAD,CAAMqD,GAAG,IAAT,qCAEA,6BAAKoE,EAAe5K,OAEpB,4BAAI4K,EAAeG,cAEnB,8BACC,4CADD,IAC0BH,EAAetE,MAAO,IAC/C,wBAAQK,QA1CK,WACjB,IAAMC,EAAa3B,EAAK4B,MAAK,SAACC,GAAD,OAAcA,EAAS/E,MAAQqB,CAA/B,IACzBwD,GACHZ,EAAS,CACRxC,KAAMa,EACNtC,IAAKqB,EACLgC,iBAAkB2B,SAASH,EAAWxB,kBAAoB,IAE3DlF,EAAW,OAAQ,MAAT,YAAC,eACP0G,GADM,IAETxB,iBAAkB2B,SAASH,EAAWxB,kBAAoB,OAG3DY,EAAS,CACRxC,KAAMU,EACNgB,QAAQ,2BAAM0F,GAAP,IAAuBxF,iBAAkB,MAEjDlF,EAAW,OAAQ,MAAT,YAAC,eAAoB0K,GAArB,IAAqCxF,iBAAkB,KAElE,EAuBI,yBACA,wBACC4F,UAAW/F,EAAK4B,MAAK,SAACoE,GAAD,OAAOA,EAAElJ,MAAQ6I,EAAe7I,GAAhC,IACrB4E,QAxBiB,WACtBX,EAAS,CACRxC,KAAMY,EACNrC,IAAK6I,EAAe7I,MAGrB7B,EAAW,OAAQ,SAAT,eAAwB0K,GAClC,EAeI,iCAQD,qBACClE,IAAG,kBAAakE,EAAevE,OAC/BI,IAAKmE,EAAe5K,UAGnB,KACHuH,EAAU,qBAAKb,IAAKmB,GAASpB,IAAI,YAAe,KACjD,cAAC,GAAD,MAGF,EC9DcyE,OA7Cf,SAAqB9E,GACpB,MAA0BH,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KAEQK,EAAsCD,EAAtCC,MAAOrG,EAA+BoG,EAA/BpG,KAAM+B,EAAyBqE,EAAzBrE,IAAKuE,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAEzBtB,EAASN,EAATM,KAuBR,OACC,sBAAK9B,UAAU,iBAAf,UACC,eAAC,IAAD,CAAMqD,GAAE,oBAAezE,GAAvB,UACC,qBAAK0E,IAAKzG,EAAM0G,IAAG,kBAAaL,KAChC,4BAAIrG,OAEL,gCACC,gCACEuG,EADF,IACaxG,EAAU,OAAQwG,GAD/B,eAGA,qCAAQD,QAET,wBAAQK,QAjCQ,WACjB,IAAMC,EAAa3B,EAAK4B,MAAK,SAACC,GAAD,OAAcA,EAAS/E,MAAQA,CAA/B,IACzB6E,GACHZ,EAAS,CACRxC,KAAMa,EACNtC,IAAKA,EACLqD,iBAAkB2B,SAASH,EAAWxB,kBAAoB,IAE3DlF,EAAW,OAAQ,MAAT,YAAC,eACP0G,GADM,IAETxB,iBAAkB2B,SAASH,EAAWxB,kBAAoB,OAG3DY,EAAS,CACRxC,KAAMU,EACNmB,QAAQ,2BAAMe,GAAP,IAAahB,iBAAkB,MAEvClF,EAAW,OAAQ,MAAT,YAAC,eAAoBkG,GAArB,IAA2BhB,iBAAkB,KAExD,EAcC,2BAGF,EC2Cc+F,OAnFf,WACC,MAA0BlF,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KAEQP,EAAoBd,EAApBc,gBAER,EAA0B6B,YAASJ,GAA3BK,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAsDjB,OApDAC,qBAAU,WACLD,GACHlG,QAAQC,IAAI,eAAgBiG,GAC5BxB,EAAS,CACRxC,KAAMS,EACNc,SAAUyC,EAAKzC,WAEhByC,EAAKzC,SAAS2C,SAAQ,SAACrC,GACtBnF,EAAW,WAAY,MAAOmF,EAC9B,KAEQkC,IACTjG,QAAQC,IAAI,OAAQiG,GACpBtH,EAAW,WAAY,OAAOyH,MAAK,SAAC5C,GACnCiB,EAAS,CACRxC,KAAMS,EACNc,SAAUA,GAEX,IAEF,GAAE,CAACyC,EAAMD,EAASvB,IAiClB,sBAAK7C,UAAU,OAAf,UACC,+CACCwB,EAAMI,SACN,qBAAK5B,UAAU,WAAf,UAjCGsC,EAIEd,EAAMI,SAASQ,QACrB,SAACF,GAAD,OAAaA,EAAQuC,SAAS7F,MAAQ0D,CAAtC,IAJOd,EAAMI,UAiCOI,KAAI,SAACE,GAAD,OACrB,cAAC,GAAD,CAECtD,IAAKsD,EAAQtD,IACbsE,MAAOhB,EAAQgB,MACfrG,KAAMqF,EAAQrF,KACdsG,MAAOjB,EAAQiB,MACfC,SAAUlB,EAAQkB,UALblB,EAAQtD,IAFO,MAYvB,qEAEAwF,EAAU,qBAAKb,IAAKmB,GAASpB,IAAI,YAAe,OAGnD,EC7Ec2E,GATE,WAChB,OACC,sBAAKjI,UAAU,YAAf,UACC,cAAC,GAAD,IACA,cAAC,GAAD,MAGF,ECwGckI,I,SAAAA,GApGf,WACC,MAA0BpF,IAA1B,mBAAOtB,EAAP,KAAcqB,EAAd,KACQ5C,EAAOuH,cAAPvH,GAER,EAA4CjB,mBAAS,CAAC,GAAtD,mBAAOmJ,EAAP,KAAuBC,EAAvB,KAEA,EAA0BjE,YAASJ,GAA3BK,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAETzC,EAAmBJ,EAAnBI,SAAUE,EAASN,EAATM,KA2DlB,OAzDAwC,qBAAU,WAEL1C,EAAS7B,OACZqI,EAAkBxG,EAAS8B,MAAK,SAACxB,GAAD,OAAaA,EAAQtD,MAAQqB,CAA7B,KAGxBoE,GACRxB,EAAS,CACRxC,KAAMS,EACNc,SAAUyC,EAAKzC,WAGhByC,EAAKzC,SAAS2C,SAAQ,SAACrC,GACtBnF,EAAW,WAAY,MAAOmF,EAC9B,KAGQkC,GACTrH,EAAW,WAAY,OAAOyH,MAAK,SAAC6D,GACnCxF,EAAS,CACRxC,KAAMS,EACNc,SAAUyG,GAEX,GAEF,GAAE,CAACzG,EAAUyC,EAAMD,EAASvB,EAAU5C,IAiCtC,qCACEkI,GAAkBrG,EAClB,sBAAK9B,UAAU,iBAAf,UACC,cAAC,IAAD,CAAMqD,GAAG,IAAT,qCAEA,6BAAK8E,EAAetL,OAEpB,4BAAIsL,EAAeP,cAEnB,8BACC,4CADD,IAC0BO,EAAehF,MAAO,IAC/C,wBAAQK,QA1CK,WACjB,IAAMC,EAAa3B,EAAK4B,MAAK,SAACC,GAAD,OAAcA,EAAS/E,MAAQqB,CAA/B,IACzBwD,GACHZ,EAAS,CACRxC,KAAMa,EACNtC,IAAKqB,EACLgC,iBAAkB2B,SAASH,EAAWxB,kBAAoB,IAE3DlF,EAAW,OAAQ,MAAT,YAAC,eACP0G,GADM,IAETxB,iBAAkB2B,SAASH,EAAWxB,kBAAoB,OAG3DY,EAAS,CACRxC,KAAMU,EACNmB,QAAQ,2BAAMiG,GAAP,IAAuBlG,iBAAkB,MAEjDlF,EAAW,OAAQ,MAAT,YAAC,eAAoBoL,GAArB,IAAqClG,iBAAkB,KAElE,EAuBI,yBACA,wBACC4F,UAAW/F,EAAK4B,MAAK,SAACoE,GAAD,OAAOA,EAAElJ,MAAQuJ,EAAevJ,GAAhC,IACrB4E,QAxBiB,WACtBX,EAAS,CACRxC,KAAMY,EACNrC,IAAKuJ,EAAevJ,MAGrB7B,EAAW,OAAQ,SAAT,eAAwBoL,GAClC,EAeI,iCAQD,qBACC5E,IAAG,kBAAa4E,EAAejF,OAC/BI,IAAK6E,EAAetL,UAGnB,KACHuH,EAAU,qBAAKb,IAAKmB,GAASpB,IAAI,YAAe,KACjD,cAAC,GAAD,MAGF,EChGcgF,GAfC,WACd,OACE,8BACE,eAAC,EAAD,WACE,oDACA,6BACE,sBAAMvD,KAAK,MAAM,aAAW,+BAA5B,gCAOT,E,SCdYwD,GAAQzE,YAAH,qMAWL0E,GAAY1E,YAAH,yeA4BT2E,GAAW3E,YAAH,oVC6BN4E,OAhEf,SAAe/F,GACb,MAAkC3D,mBAAS,CAAEC,MAAO,GAAI0J,SAAU,KAAlE,mBAAOxJ,EAAP,KAAkBC,EAAlB,KACA,EAA2BwJ,aAAYL,IAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAAgBA,MAEVC,EAAgB,mDAAG,WAAOC,GAAP,2FACvBA,EAAM7I,iBADiB,kBAGU0I,EAAM,CACnCxB,UAAW,CAAEpI,MAAOE,EAAUF,MAAO0J,SAAUxJ,EAAUwJ,YAJtC,OAGfM,EAHe,OAMf7D,EAAQ6D,EAAiB5E,KAAKwE,MAAMzD,MAC1C4B,GAAK6B,MAAMzD,GAPU,gDASrBjH,QAAQC,IAAR,MATqB,yDAAH,sDAahBmB,EAAe,SAACyJ,GACpB,MAAwBA,EAAMxJ,OAAtB3C,EAAR,EAAQA,KAAMiD,EAAd,EAAcA,MACdV,EAAa,2BACRD,GADO,kBAETtC,EAAOiD,IAEX,EAED,OACE,sBAAKE,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMqD,GAAG,UAAT,iCAEA,uCACA,uBAAMnD,SAAU6I,EAAhB,UACE,sBAAK/I,UAAU,8BAAf,UACE,uBAAOI,QAAQ,QAAf,4BACA,uBACEyE,YAAY,qBACZhI,KAAK,QACLwD,KAAK,QACLJ,GAAG,QACH6E,SAAUvF,OAGd,sBAAKS,UAAU,8BAAf,UACE,uBAAOI,QAAQ,MAAf,uBACA,uBACEyE,YAAY,SACZhI,KAAK,WACLwD,KAAK,WACLJ,GAAG,MACH6E,SAAUvF,OAGbuJ,EACC,8BACE,mBAAG9I,UAAU,aAAb,sDAEA,KACJ,qBAAKA,UAAU,oBAAf,SACE,wBAAQK,KAAK,SAAb,2BAKT,ECkBc6I,OAhFf,SAAgBvG,GACd,MAAkC3D,mBAAS,CAAEC,MAAO,GAAI0J,SAAU,KAAlE,mBAAOxJ,EAAP,KAAkBC,EAAlB,KACA,EAAkBwJ,aAAYH,IAAvBU,EAAP,oBAEMJ,EAAgB,mDAAG,WAAOC,GAAP,2FACvBA,EAAM7I,iBADiB,SAEQgJ,EAAQ,CACrC9B,UAAW,CACT+B,SAAUjK,EAAUiK,SACpBnK,MAAOE,EAAUF,MACjB0J,SAAUxJ,EAAUwJ,SACpBU,UAAWlK,EAAUkK,aAPF,OAEjBJ,EAFiB,OAUjB7D,EAAQ6D,EAAiB5E,KAAK8E,QAAQ/D,MAC5C4B,GAAK6B,MAAMzD,GAXY,2CAAH,sDAchB7F,EAAe,SAACyJ,GACpB,MAAwBA,EAAMxJ,OAAtB3C,EAAR,EAAQA,KAAMiD,EAAd,EAAcA,MACdV,EAAa,2BACRD,GADO,kBAETtC,EAAOiD,IAEX,EAED,OACE,sBAAKE,UAAU,iBAAf,UACE,cAAC,IAAD,CAAMqD,GAAG,SAAT,gCAEA,wCACA,uBAAMnD,SAAU6I,EAAhB,UACE,sBAAK/I,UAAU,8BAAf,UACE,uBAAOI,QAAQ,WAAf,uBACA,uBACEyE,YAAY,WACZhI,KAAK,WACLwD,KAAK,WACLJ,GAAG,WACH6E,SAAUvF,OAGd,sBAAKS,UAAU,8BAAf,UACE,uBAAOI,QAAQ,YAAf,yBACA,uBACEyE,YAAY,OACZhI,KAAK,YACLwD,KAAK,YACLJ,GAAG,YACH6E,SAAUvF,OAGd,sBAAKS,UAAU,8BAAf,UACE,uBAAOI,QAAQ,QAAf,oBACA,uBACEyE,YAAY,qBACZhI,KAAK,QACLwD,KAAK,QACLJ,GAAG,QACH6E,SAAUvF,OAGd,sBAAKS,UAAU,8BAAf,UACE,uBAAOI,QAAQ,MAAf,uBACA,uBACEyE,YAAY,SACZhI,KAAK,WACLwD,KAAK,WACLJ,GAAG,MACH6E,SAAUvF,OAGd,qBAAKS,UAAU,oBAAf,SACE,wBAAQK,KAAK,SAAb,2BAKT,ECPciJ,OAzEf,WAyDE,OACE,yBAAQtJ,UAAU,gBAAlB,UACE,6BACE,eAAC,IAAD,CAAMqD,GAAG,IAAT,UACE,sBAAM0B,KAAK,MAAM,aAAW,eAA5B,gCADF,gBAMF,8BA/DEiC,GAAKC,WAEL,qBAAIjH,UAAU,WAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,eAAT,oBAIF,oBAAIrD,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,eAAT,wBAIF,oBAAIrD,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,gBAAT,6BAIF,oBAAIrD,UAAU,OAAd,SAEE,mBAAGuJ,KAAK,IAAI/F,QAAS,kBAAMwD,GAAKwC,QAAX,EAArB,yBAQJ,qBAAIxJ,UAAU,WAAd,UACE,oBAAIA,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,YAAT,oBAIF,oBAAIrD,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,YAAT,wBAIF,oBAAIrD,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,UAAT,sBAIF,oBAAIrD,UAAU,OAAd,SACE,cAAC,IAAD,CAAMqD,GAAG,SAAT,4BAuBX,ECvBcoG,OA9Cf,WACC,MAAmBb,aAAYJ,IAAxBkB,EAAP,oBAkCA,OAhCApF,qBAAU,WAAM,wDACf,2HACoBvH,EAAW,OAAQ,OADvC,UACO+E,EADP,OAEOH,EAAWG,EAAKE,KAAI,SAACiB,GAAD,OAAUA,EAAKrE,GAAf,IACpBgD,EAAWE,EAAKE,KAAI,SAACiB,GAAD,OAAUA,EAAKrE,GAAf,KAEtB+C,EAAS5B,OALd,iCAMyB2J,EAAS,CAAErC,UAAW,CAAE1F,cANjD,gBAMU0C,EANV,EAMUA,KACYA,EAAKqF,SAAS/H,SAEtB4C,SAAQ,SAACtB,GACpBlG,EAAW,OAAQ,SAAUkG,EAC7B,IAXH,YAcKrB,EAAS7B,OAdd,kCAeyB2J,EAAS,CAAErC,UAAW,CAAEzF,cAfjD,iBAeUyC,EAfV,EAeUA,KACYA,EAAKqF,SAASC,SAEtBpF,SAAQ,SAACtB,GACpBlG,EAAW,OAAQ,SAAUkG,EAC7B,IApBH,QAuBC2G,YAAW,WACVlM,OAAOoI,SAASC,OAAO,IACvB,GAAE,KAzBJ,6CADe,uBAAC,WAAD,wBA6Bf8D,EACA,GAAE,CAACH,IAGH,8BACC,eAAC,EAAD,WACC,0CACA,8DACA,iFAIH,ECYcI,OAxDf,WACC,IACIC,EADI1F,EAASF,YAASF,IAAlBI,KAOR,OAJIA,IACH0F,EAAO1F,EAAK0F,MAIZ,mCACC,sBAAK/J,UAAU,iBAAf,UACC,cAAC,IAAD,CAAMqD,GAAG,IAAT,qCAEC0G,EACA,qCACC,oDACoBA,EAAKX,YAExBW,EAAKC,OAAOhI,KAAI,SAACiI,GAAD,OAChB,sBAAqBjK,UAAU,OAA/B,UACC,6BACE,IAAIuF,KAAK3B,SAASqG,EAAMC,eAAeC,uBAEzC,sBAAKnK,UAAU,WAAf,UACEiK,EAAMtI,SAASK,KAAI,WAA8BoI,GAA9B,IAAGxL,EAAH,EAAGA,IAAKsE,EAAR,EAAQA,MAAOrG,EAAf,EAAeA,KAAMsG,EAArB,EAAqBA,MAArB,OACnB,sBAAiBnD,UAAU,iBAA3B,UACC,eAAC,IAAD,CAAMqD,GAAE,oBAAezE,GAAvB,UACC,qBAAK0E,IAAKzG,EAAM0G,IAAG,kBAAaL,KAChC,4BAAIrG,OAEL,8BACC,qCAAQsG,SANAiH,EADS,IAWnBH,EAAMrI,SAASI,KAAI,WAA8BoI,GAA9B,IAAGxL,EAAH,EAAGA,IAAKsE,EAAR,EAAQA,MAAOrG,EAAf,EAAeA,KAAMsG,EAArB,EAAqBA,MAArB,OACnB,sBAAiBnD,UAAU,iBAA3B,UACC,eAAC,IAAD,CAAMqD,GAAE,oBAAezE,GAAvB,UACC,qBAAK0E,IAAKzG,EAAM0G,IAAG,kBAAaL,KAChC,4BAAIrG,OAEL,8BACC,qCAAQsG,SANAiH,EADS,SAhBZH,EAAMrL,IADA,OAgCf,SAIP,ECpCKyL,GAAWC,YAAe,CAC/BC,IAAK,aAGAC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC3BvF,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACNgF,QAAQ,2BACJA,GADG,IAENC,cAAexF,EAAK,iBAAaA,GAAU,KAG7C,IAEKyF,GAAS,IAAIC,IAAa,CAC/BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,MA6BGC,OA1Bf,WACC,OACC,cAACC,EAAA,EAAD,CAAgBP,OAAQA,GAAxB,SACC,cAAC,IAAD,UACC,8BACC,eAAC,EAAD,WACC,cAAC,GAAD,IACA,eAAC,IAAD,WACC,cAAC,IAAD,CAAOQ,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,GAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,GAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,QAAS,cAAC,GAAD,MACrC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,iBAO/B,ECvDKC,GAAcC,QACW,cAA7B9N,OAAOoI,SAAS2F,UAEa,UAA7B/N,OAAOoI,SAAS2F,UAEhB/N,OAAOoI,SAAS2F,SAASC,MACvB,2DAyCJ,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTpH,MAAK,SAAAyH,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3K,QACfsK,UAAUC,cAAcO,YAI1BnO,QAAQC,IACN,iHAKEyN,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB9N,QAAQC,IAAI,sCAGRyN,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,IAIxB,EACF,CACF,IACAQ,OAAM,SAAA3D,GACL3K,QAAQ2K,MAAM,4CAA6CA,EAC5D,GACJ,CC/FD4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SDYnB,SAAkBjB,GACvB,GAEE,kBAAmBC,UAAW,CAI9B,GADkB,IAAIiB,IAAIC,GAAwBtP,OAAOoI,SAASyD,MACpD0D,SAAWvP,OAAOoI,SAASmH,OAIvC,OAGFvP,OAAOwP,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMoB,GAAN,sBAEPzB,KAgEV,SAAiCK,EAAOC,GAEtCsB,MAAMvB,EAAO,CACXjB,QAAS,CAAE,iBAAkB,YAE5BnG,MAAK,SAAA4I,GAEJ,IAAMC,EAAcD,EAASzC,QAAQ2C,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMjJ,MAAK,SAAAyH,GACjCA,EAAayB,aAAalJ,MAAK,WAC7B9G,OAAOoI,SAAS6H,QACjB,GACF,IAGDhC,GAAgBC,EAAOC,EAE1B,IACAY,OAAM,WACLtO,QAAQC,IACN,gEAEH,GACJ,CA1FOwP,CAAwBhC,EAAOC,GAI/BC,UAAUC,cAAc0B,MAAMjJ,MAAK,WACjCrG,QAAQC,IACN,4GAGH,KAGDuN,GAAgBC,EAAOC,EAE1B,GACF,CACF,CCzCDE,E","file":"static/js/main.e19345e5.chunk.js","sourcesContent":["export function pluralize(name, count) {\n\tif (count === 1) {\n\t\treturn name;\n\t}\n\treturn name + 's';\n}\n\nexport function validateEmail(email) {\n\tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\treturn re.test(String(email).toLowerCase());\n  }\n  \n\nexport function idbPromise(storeName, method, object) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = window.indexedDB.open('shop-shop', 1);\n\t\tlet db, tx, store;\n\t\trequest.onupgradeneeded = function (e) {\n\t\t\tconst db = request.result;\n\t\t\tdb.createObjectStore('products', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('services', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('categories', { keyPath: '_id' });\n\t\t\tdb.createObjectStore('cart', { keyPath: '_id' });\n\t\t};\n\n\t\trequest.onerror = function (e) {\n\t\t\tconsole.log('There was an error');\n\t\t};\n\n\t\trequest.onsuccess = function (e) {\n\t\t\tdb = request.result;\n\t\t\ttx = db.transaction(storeName, 'readwrite');\n\t\t\tstore = tx.objectStore(storeName);\n\n\t\t\tdb.onerror = function (e) {\n\t\t\t\tconsole.log('error', e);\n\t\t\t};\n\n\t\t\tswitch (method) {\n\t\t\t\tcase 'put':\n\t\t\t\t\tstore.put(object);\n\t\t\t\t\tresolve(object);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'get':\n\t\t\t\t\tconst all = store.getAll();\n\t\t\t\t\tall.onsuccess = function () {\n\t\t\t\t\t\tresolve(all.result);\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'delete':\n\t\t\t\t\tstore.delete(object._id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log('No valid method');\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ttx.oncomplete = function () {\n\t\t\t\tdb.close();\n\t\t\t};\n\t\t};\n\t});\n}\n","import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  //get formstate\n  //initialize keys as empty strings for each user input\n  //initialize set form state\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  //further destructure formState\n  //pass these values into functions\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!errorMessage) {\n      console.log('Submit Form', formState);\n    }\n  };\n\n  //will sync formstate with user input from DOM\n  //fires with every keystroke\n  const handleChange = (e) => {\n    //validate before syncing\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      //sets message for invalid email\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      //checks if the other two fields are blank\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n    //if no error messages\n    //sync form state\n    if (!errorMessage) {\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n      console.log('Handle Form', formState);\n    }\n  };\n\n  //create a form with three inputs\n  //name, email, message text\n  // replace label for=''\n  //should be label htmlFor=''\n  //use destructured form states to set values\n  //only show error message if it has a message in it\n  return (\n    <section className='form'>\n      <h1 data-testid=\"h1tag\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label className='text-label' htmlFor=\"name\">Name:</label>\n          <input className='text-input' type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        </div>\n        <div>\n          <label className='text-label' htmlFor=\"email\">Email address:</label>\n          <input className='text-input' type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        </div>\n        <div>\n          <label className='text-label' htmlFor=\"message\">Message:</label>\n          <textarea className='text-input'  name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;","import React from \"react\";\n\nimport Contact from '../../components/Contact'\nimport './style.css'\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      className=\"jumbotron\"\n    >\n      <div className=\"jumbotron-cta\">\n        {children}\n        <h2>Welcome to the MERN Spa!</h2>\n        <p>Have a look around to see what we're about</p>\n      </div>\n      <div className=\"jumbotron-form\">\n        <Contact />\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from 'react';\n\n\nimport Jumbotron from '../components/Jumbotron';\n\n//import Auth from '../utils/auth'\n\nconst Home = () => {\n\t\n\t//const loggedIn = Auth.loggedIn()\n\n\treturn (\n\t<main>\n\t\t<div className='jumbotron'>\n\t\t\t<Jumbotron />\n\t\t</div>\n\n\t\t<div className='intro'>\n\t\t\t<h2 className=\"section-title\">Our Philosophy</h2>\n\t\t\t<p>Search through our products and services to learn about the different aspects of the MERN stack.</p>\n\t\t</div>\n\n\t</main>\n\t\t)\n};\n\nexport default Home;\n","export const UPDATE_PRODUCTS = 'UPDATE_PRODUCTS';\nexport const UPDATE_SERVICES = 'UPDATE_SERVICES';\n\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const TOGGLE_CART = 'TOGGLE_CART';\n\nexport const UPDATE_CATEGORIES = 'UPDATE_CATEGORIES';\nexport const UPDATE_CURRENT_CATEGORY = 'UPDATE_CURRENT_CATEGORY';\n","import { useReducer } from 'react';\nimport {\n\tUPDATE_PRODUCTS,\n\tUPDATE_SERVICES,\n\tADD_TO_CART,\n\tUPDATE_CART_QUANTITY,\n\tREMOVE_FROM_CART,\n\tADD_MULTIPLE_TO_CART,\n\tUPDATE_CATEGORIES,\n\tUPDATE_CURRENT_CATEGORY,\n\tCLEAR_CART,\n\tTOGGLE_CART,\n} from './actions';\n\nexport const init = (initialState) => {\n\treturn {state: initialState}\n}\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase UPDATE_PRODUCTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tproducts: [...action.products],\n\t\t\t};\n\n\t\tcase UPDATE_SERVICES:\n\t\t\tconsole.log('action', action);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tservices: [...action.services],\n\t\t\t};\n\n\t\tcase ADD_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: [...state.cart, action.product, action.services],\n\t\t\t};\n\n\t\tcase ADD_MULTIPLE_TO_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcart: [ ...action.products, ...action.services],\n\t\t\t};\n\n\t\tcase UPDATE_CART_QUANTITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: true,\n\t\t\t\tcart: state.cart.map(\n\t\t\t\t\t(product) => {\n\t\t\t\t\t\tif (action._id === product._id) {\n\t\t\t\t\t\t\tproduct.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn product;\n\t\t\t\t\t},\n\t\t\t\t\t(service) => {\n\t\t\t\t\t\tif (action._id === service._id) {\n\t\t\t\t\t\t\tservice.purchaseQuantity = action.purchaseQuantity;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn service;\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase REMOVE_FROM_CART:\n\t\t\tlet newState = state.cart.filter(\n\t\t\t\t(product) => {\n\t\t\t\t\treturn product._id !== action._id;\n\t\t\t\t},\n\t\t\t\t(service) => {\n\t\t\t\t\treturn service._id !== action._id;\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: newState.length > 0,\n\t\t\t\tcart: newState,\n\t\t\t};\n\n\t\tcase CLEAR_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: false,\n\t\t\t\tcart: [],\n\t\t\t};\n\n\t\tcase TOGGLE_CART:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartOpen: !state.cartOpen,\n\t\t\t};\n\n\t\tcase UPDATE_CATEGORIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcategories: [...action.categories],\n\t\t\t};\n\n\t\tcase UPDATE_CURRENT_CATEGORY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentCategory: action.currentCategory,\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn init(state);\n\t}\n};\n\nexport function useStoreReducer(initialState) {\n\treturn useReducer(reducer, initialState, init);\n}\n","import React, { createContext, useContext } from 'react';\nimport { useStoreReducer } from './reducers';\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n\tconst [state, dispatch] = useStoreReducer({\n\t\tproducts: [],\n\t\tservices: [],\n\t\tcart: [],\n\t\tcartOpen: false,\n\t\tcategories: [],\n\t\tcurrentCategory: '',\n\t});\n\n\treturn <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n\treturn useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n\tquery getProducts($category: ID) {\n\t\tproducts(category: $category) {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\timage\n\t\t\tcategory {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_SERVICES = gql`\n\tquery getServices($category: ID) {\n\t\tservices(category: $category) {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\timage\n\t\t\tcategory {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n\tquery getCheckout($products: [ID]!, $services: [ID]!) {\n\t\tcheckout(products: $products, services: $services) {\n\t\t\tsession\n\t\t}\n\t}\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n\t{\n\t\tproducts {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_ALL_SERVICES = gql`\n\t{\n\t\tservices {\n\t\t\t_id\n\t\t\tname\n\t\t\tdescription\n\t\t\tprice\n\t\t\tquantity\n\t\t\tcategory {\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const QUERY_CATEGORIES = gql`\n\t{\n\t\tcategories {\n\t\t\t_id\n\t\t\tname\n\t\t}\n\t}\n`;\n\nexport const QUERY_USER = gql`\n\t{\n\t\tuser {\n\t\t\tfirstName\n\t\t\tusername\n\t\t\torders {\n\t\t\t\t_id\n\t\t\t\tpurchaseDate\n\t\t\t\tproducts {\n\t\t\t\t\t_id\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tquantity\n\t\t\t\t\timage\n\t\t\t\t}\n\t\t\t\tservices {\n\t\t\t\t\t_id\n\t\t\t\t\tname\n\t\t\t\t\tdescription\n\t\t\t\t\tprice\n\t\t\t\t\tquantity\n\t\t\t\t\timage\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  // function renderProducts(productsArr) {\n  //   console.log(productsArr)\n  //   let filteredArr = filterProducts(productsArr)\n  //   if (!filteredArr){\n  //     return <h2>No productsArr</h2>\n  //   }\n  //   filteredArr.map(product => {\n  //     if(!product){\n  //       return <h2>No products in productsArr</h2>\n  //     } \n  //       return <ProductItem\n  //         key={product._id}\n  //         _id={product._id}\n  //         image={product.image}\n  //         name={product.name}\n  //         price={product.price}\n  //         quantity={product.quantity}\n  //         />\n      \n  //   })\n  // }\n  return (\n    <div className=\"my-2 container\">\n      <h2>Our Products:</h2>\n      {state.products ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  const renderCategories = (categoriesArr) => {\n    if(!categoriesArr) {\n      return <h2>No categoriesArr</h2>\n    }\n    categoriesArr.map(item => {\n      if(!item) {\n        return <p>No categories to display</p>\n      } else {\n        return <button\n          key={item._id}\n          onclick={() => {\n          handleClick(item._id);\n        }}\n        >\n          {item.name}\n        </button>\n      }\n    })\n  }\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n\tconst [state, dispatch] = useStoreContext();\n\tconst [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tstripePromise.then((res) => {\n\t\t\t\tres.redirectToCheckout({ sessionId: data.checkout.session });\n\t\t\t});\n\t\t}\n\t}, [data]);\n\n\tuseEffect(() => {\n\t\tconsole.log('inside cart useEffect');\n\t\tasync function getCart() {\n\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_MULTIPLE_TO_CART,\n\t\t\t\tproducts: [...cart],\n\t\t\t\tservices: [...cart],\n\t\t\t});\n\t\t}\n\n\t\tif (!state.cart) {\n\t\t\tgetCart();\n\t\t}\n\t}, [state.cart, dispatch]);\n\n\tfunction toggleCart() {\n\t\tdispatch({ type: TOGGLE_CART });\n\t}\n\n\tfunction calculateTotal() {\n\t\tlet sum = 0;\n\t\tstate.cart.forEach((item) => {\n\t\t\tsum += item.price * item.purchaseQuantity;\n\t\t});\n\t\treturn sum.toFixed(2);\n\t}\n\n\tfunction submitCheckout() {\n\t\tconst productIds = [];\n\n\t\tstate.cart.forEach((item) => {\n\t\t\tfor (let i = 0; i < item.purchaseQuantity; i++) {\n\t\t\t\tproductIds.push(item._id);\n\t\t\t}\n\t\t});\n\n\t\tgetCheckout({\n\t\t\tvariables: { products: productIds },\n\t\t});\n\t}\n\n\tif (!state.cartOpen) {\n\t\treturn (\n\t\t\t<div className=\"cart-closed\" onClick={toggleCart}>\n\t\t\t\t<span role=\"img\" aria-label=\"trash\">\n\t\t\t\t\t🛒\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n\tconsole.log('state cart', state.cart);\n\n\t// function renderCartItem(){\n\t// \tif(!state.cart.length) {\n\t// \t\treturn <h2>No cartArr</h2>\n\t// \t}\n\t// \tstate.cart.map(item => {\n\t// \t\tif(!item){\n\t// \t\t\treturn <h2>No items in cartArr</h2>\n\t// \t\t} else {\n\t// \t\t\treturn <CartItem key={item._id} item={item} />\n\t// \t\t}\n\t// \t})\n\t// }\n\n\treturn (\n\t\t<div className=\"cart\">\n\t\t\t<div className=\"close\" onClick={toggleCart}>\n\t\t\t\t[close]\n\t\t\t</div>\n\t\t\t<h2>Shopping Cart</h2>\n\t\t\t{state.cart ? (\n\t\t\t\t<div>\n\t\t\t\t\t{state.cart.map((item) => (\n\t\t\t\t\t\t<CartItem key={item._id} item={item} />\n\t\t\t\t\t))}\n\n\t\t\t\t\t<div className=\"flex-row space-between\">\n\t\t\t\t\t\t<strong>Total: ${calculateTotal()}</strong>\n\n\t\t\t\t\t\t{Auth.loggedIn() ? (\n\t\t\t\t\t\t\t<button onClick={submitCheckout}>Checkout</button>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<span>(log in to check out)</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>\n\t\t\t\t\t<span role=\"img\" aria-label=\"shocked\">\n\t\t\t\t\t\t😱\n\t\t\t\t\t</span>\n\t\t\t\t\tYou haven't added anything to your cart yet!\n\t\t\t\t</h3>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Cart;\n","import React from 'react';\nimport ProductList from '../components/ProductList';\nimport CategoryMenu from '../components/CategoryMenu';\nimport Cart from '../components/Cart';\n\nconst ProdList = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<ProductList />\n\t\t\t<Cart />\n\t\t</div>\n\t);\n};\n\nexport default ProdList;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n\tREMOVE_FROM_CART,\n\tUPDATE_CART_QUANTITY,\n\tADD_TO_CART,\n\tUPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction ProductDetail() {\n\tconst [state, dispatch] = useStoreContext();\n\tconst { id } = useParams();\n\n\tconst [currentProduct, setCurrentProduct] = useState({});\n\n\tconst { loading, data } = useQuery(QUERY_PRODUCTS);\n\n\tconst { products, cart } = state;\n\n\tuseEffect(() => {\n\t\t// already in global store\n\t\tif (products.length) {\n\t\t\tsetCurrentProduct(products.find((product) => product._id === id));\n\t\t}\n\t\t// retrieved from server\n\t\telse if (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\tproducts: data.products,\n\t\t\t});\n\n\t\t\tdata.products.forEach((product) => {\n\t\t\t\tidbPromise('products', 'put', product);\n\t\t\t});\n\t\t}\n\t\t// get cache from idb\n\t\telse if (!loading) {\n\t\t\tidbPromise('products', 'get').then((indexedProducts) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_PRODUCTS,\n\t\t\t\t\tproducts: indexedProducts,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [products, data, loading, dispatch, id]);\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tproduct: { ...currentProduct, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\tconst removeFromCart = () => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t_id: currentProduct._id,\n\t\t});\n\n\t\tidbPromise('cart', 'delete', { ...currentProduct });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{currentProduct && cart ? (\n\t\t\t\t<div className=\"container my-1\">\n\t\t\t\t\t<Link to=\"/\">← Back to Products</Link>\n\n\t\t\t\t\t<h2>{currentProduct.name}</h2>\n\n\t\t\t\t\t<p>{currentProduct.description}</p>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Price:</strong>${currentProduct.price}{' '}\n\t\t\t\t\t\t<button onClick={addToCart}>Add to Cart</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={!cart.find((p) => p._id === currentProduct._id)}\n\t\t\t\t\t\t\tonClick={removeFromCart}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove from Cart\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`/images/${currentProduct.image}`}\n\t\t\t\t\t\talt={currentProduct.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t\t<Cart />\n\t\t</>\n\t);\n}\n\nexport default ProductDetail;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ServiceItem(item) {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { image, name, _id, price, quantity } = item;\n\n\tconst { cart } = state;\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: _id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tservice: { ...item, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"card px-1 py-1\">\n\t\t\t<Link to={`/services/${_id}`}>\n\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t<p>{name}</p>\n\t\t\t</Link>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t{quantity} {pluralize('item', quantity)} in stock\n\t\t\t\t</div>\n\t\t\t\t<span>${price}</span>\n\t\t\t</div>\n\t\t\t<button onClick={addToCart}>Add to cart</button>\n\t\t</div>\n\t);\n}\n\nexport default ServiceItem;\n","import React, { useEffect } from 'react';\nimport ServiceItem from '../ServiceItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_SERVICES } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_SERVICES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n//import { useStoreReducer } from '../../utils/reducers';\n\nfunction ServiceList() {\n\tconst [state, dispatch] = useStoreContext();\n\n\tconst { currentCategory } = state;\n\n\tconst { loading, data } = useQuery(QUERY_SERVICES);\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tconsole.log('data is here', data);\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\tservices: data.services,\n\t\t\t});\n\t\t\tdata.services.forEach((service) => {\n\t\t\t\tidbPromise('services', 'put', service);\n\t\t\t});\n\t\t}\n\t\telse if (!loading) {\n\t\t\tconsole.log('data', data);\n\t\t\tidbPromise('services', 'get').then((services) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\t\tservices: services,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [data, loading, dispatch]);\n\n\tfunction filterServices() {\n\t\tif (!currentCategory) {\n\t\t\treturn state.services;\n\t\t}\n\n\t\treturn state.services.filter(\n\t\t\t(service) => service.category._id === currentCategory\n\t\t);\n\t}\n\n\t// function renderServices(servicesArr) {\n\t// \tif(!servicesArr){\n\t// \t\treturn <h2>No servicesArr</h2>\n\t// \t}\n\t// \tfilterServices(servicesArr).map(service => {\n\t// \t\tif(!service){\n\t// \t\t\treturn <h2>No services in serviceArr</h2>\n\t// \t\t} else {\n\t// \t\t\treturn <ServiceItem\n\t// \t\t\tkey={service._id}\n\t// \t\t\t_id={service._id}\n\t// \t\t\timage={service.image}\n\t// \t\t\tname={service.name}\n\t// \t\t\tprice={service.price}\n\t// \t\t\tquantity={service.quantity}\n\t// \t\t\t/>\n\t// \t\t}\n\t// \t})\n\t// }\n\n\treturn (\n\t\t<div className=\"my-2\">\n\t\t\t<h2>Our services:</h2>\n\t\t\t{state.services ? (\n\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t{filterServices().map((service) => (\n\t\t\t\t\t\t<ServiceItem\n\t\t\t\t\t\t\tkey={service._id}\n\t\t\t\t\t\t\t_id={service._id}\n\t\t\t\t\t\t\timage={service.image}\n\t\t\t\t\t\t\tname={service.name}\n\t\t\t\t\t\t\tprice={service.price}\n\t\t\t\t\t\t\tquantity={service.quantity}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<h3>You haven't added any services yet!</h3>\n\t\t\t)}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t</div>\n\t);\n}\n\nexport default ServiceList;\n","import React from 'react';\nimport ServiceList from '../components/ServiceList';\nimport CategoryMenu from '../components/CategoryMenu';\nimport Cart from '../components/Cart';\n\nconst ServList = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<ServiceList />\n\t\t\t<Cart />\n\t\t</div>\n\t);\n};\n\nexport default ServList;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n\tREMOVE_FROM_CART,\n\tUPDATE_CART_QUANTITY,\n\tADD_TO_CART,\n\tUPDATE_SERVICES,\n} from '../utils/actions';\nimport { QUERY_SERVICES } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction ServiceDetail() {\n\tconst [state, dispatch] = useStoreContext();\n\tconst { id } = useParams();\n\n\tconst [currentService, setCurrentService] = useState({});\n\n\tconst { loading, data } = useQuery(QUERY_SERVICES);\n\n\tconst { services, cart } = state;\n\n\tuseEffect(() => {\n\t\t// already in global store\n\t\tif (services.length) {\n\t\t\tsetCurrentService(services.find((service) => service._id === id));\n\t\t}\n\t\t// retrieved from server\n\t\telse if (data) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\tservices: data.services,\n\t\t\t});\n\n\t\t\tdata.services.forEach((service) => {\n\t\t\t\tidbPromise('services', 'put', service);\n\t\t\t});\n\t\t}\n\t\t// get cache from idb\n\t\telse if (!loading) {\n\t\t\tidbPromise('services', 'get').then((indexedServices) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: UPDATE_SERVICES,\n\t\t\t\t\tservices: indexedServices,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, [services, data, loading, dispatch, id]);\n\n\tconst addToCart = () => {\n\t\tconst itemInCart = cart.find((cartItem) => cartItem._id === id);\n\t\tif (itemInCart) {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_CART_QUANTITY,\n\t\t\t\t_id: id,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', {\n\t\t\t\t...itemInCart,\n\t\t\t\tpurchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n\t\t\t});\n\t\t} else {\n\t\t\tdispatch({\n\t\t\t\ttype: ADD_TO_CART,\n\t\t\t\tservice: { ...currentService, purchaseQuantity: 1 },\n\t\t\t});\n\t\t\tidbPromise('cart', 'put', { ...currentService, purchaseQuantity: 1 });\n\t\t}\n\t};\n\n\tconst removeFromCart = () => {\n\t\tdispatch({\n\t\t\ttype: REMOVE_FROM_CART,\n\t\t\t_id: currentService._id,\n\t\t});\n\n\t\tidbPromise('cart', 'delete', { ...currentService });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{currentService && cart ? (\n\t\t\t\t<div className=\"container my-1\">\n\t\t\t\t\t<Link to=\"/\">← Back to Services</Link>\n\n\t\t\t\t\t<h2>{currentService.name}</h2>\n\n\t\t\t\t\t<p>{currentService.description}</p>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>Price:</strong>${currentService.price}{' '}\n\t\t\t\t\t\t<button onClick={addToCart}>Add to Cart</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={!cart.find((p) => p._id === currentService._id)}\n\t\t\t\t\t\t\tonClick={removeFromCart}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRemove from Cart\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`/images/${currentService.image}`}\n\t\t\t\t\t\talt={currentService.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : null}\n\t\t\t{loading ? <img src={spinner} alt=\"loading\" /> : null}\n\t\t\t<Cart />\n\t\t</>\n\t);\n}\n\nexport default ServiceDetail;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n\tmutation login($email: String!, $password: String!) {\n\t\tlogin(email: $email, password: $password) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_ORDER = gql`\n\tmutation addOrder($products: [ID]!, $services: [ID]!) {\n\t\taddOrder(products: $products, services: $services) {\n\t\t\tpurchaseDate\n\t\t\tproducts {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tcategory {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t\tservices {\n\t\t\t\t_id\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\tquantity\n\t\t\t\tcategory {\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ADD_USER = gql`\n\tmutation addUser(\n\t\t$firstName: String!\n\t\t$username: String!\n\t\t$email: String!\n\t\t$password: String!\n\t) {\n\t\taddUser(\n\t\t\tfirstName: $firstName\n\t\t\tusername: $username\n\t\t\temail: $email\n\t\t\tpassword: $password\n\t\t) {\n\t\t\ttoken\n\t\t\tuser {\n\t\t\t\t_id\n\t\t\t}\n\t\t}\n\t}\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        username: formState.username,\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            placeholder=\"Username\"\n            name=\"username\"\n            type=\"username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className='mx-1'>\n            <Link to='/productList'>\n              Shop\n            </Link>\n          </li>\n          <li className='mx-1'>\n            <Link to='/serviceList'>\n              Services\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className='mx-1'>\n            <Link to='/products'>\n              Shop\n            </Link>\n          </li>\n          <li className='mx-1'>\n            <Link to='/services'>\n              Services\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          MERN Spa\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n\tconst [addOrder] = useMutation(ADD_ORDER);\n\n\tuseEffect(() => {\n\t\tasync function saveOrder() {\n\t\t\tconst cart = await idbPromise('cart', 'get');\n\t\t\tconst products = cart.map((item) => item._id);\n\t\t\tconst services = cart.map((item) => item._id);\n\n\t\t\tif (products.length) {\n\t\t\t\tconst { data } = await addOrder({ variables: { products } });\n\t\t\t\tconst productData = data.addOrder.products;\n\n\t\t\t\tproductData.forEach((item) => {\n\t\t\t\t\tidbPromise('cart', 'delete', item);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (services.length) {\n\t\t\t\tconst { data } = await addOrder({ variables: { services } });\n\t\t\t\tconst serviceData = data.addOrder.cervices;\n\n\t\t\t\tserviceData.forEach((item) => {\n\t\t\t\t\tidbPromise('cart', 'delete', item);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location.assign('/');\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsaveOrder();\n\t}, [addOrder]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Jumbotron>\n\t\t\t\t<h1>Success!</h1>\n\t\t\t\t<h2>Thank you for your purchase!</h2>\n\t\t\t\t<h2>You will now be redirected to the home page</h2>\n\t\t\t</Jumbotron>\n\t\t</div>\n\t);\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n\tconst { data } = useQuery(QUERY_USER);\n\tlet user;\n\n\tif (data) {\n\t\tuser = data.user;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"container my-1\">\n\t\t\t\t<Link to=\"/\">← Back to Products</Link>\n\n\t\t\t\t{user ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\tOrder History for {user.username} \n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t{user.orders.map((order) => (\n\t\t\t\t\t\t\t<div key={order._id} className=\"my-2\">\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t<div className=\"flex-row\">\n\t\t\t\t\t\t\t\t\t{order.products.map(({ _id, image, name, price }, index) => (\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"card px-1 py-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/products/${_id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>${price}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{order.services.map(({ _id, image, name, price }, index) => (\n\t\t\t\t\t\t\t\t\t\t<div key={index} className=\"card px-1 py-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/services/${_id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img alt={name} src={`/images/${image}`} />\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{name}</p>\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>${price}</span>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n\tApolloClient,\n\tInMemoryCache,\n\tApolloProvider,\n\tcreateHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport ProdList from './pages/ProductList';\nimport ProductDetail from './pages/ProductDetail';\nimport ServList from './pages/ServiceList';\nimport ServiceDetail from './pages/ServiceDetail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\n//import Cart from './components/Cart'\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n\turi: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('id_token');\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : '',\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\nfunction App() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<StoreProvider>\n\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route path=\"/\" element={<Home />} />\n\t\t\t\t\t\t\t<Route path=\"/login\" element={<Login />} />\n\t\t\t\t\t\t\t<Route path=\"/signup\" element={<Signup />} />\n\t\t\t\t\t\t\t<Route path=\"/success\" element={<Success />} />\n\t\t\t\t\t\t\t<Route path=\"/orderHistory\" element={<OrderHistory />} />\n\t\t\t\t\t\t\t<Route path=\"/products\" element={<ProdList />} />\n\t\t\t\t\t\t\t<Route path=\"/products/:id\" element={<ProductDetail />} />\n\t\t\t\t\t\t\t<Route path=\"/services\" element={<ServList />} />\n\t\t\t\t\t\t\t<Route path=\"/services/:id\" element={<ServiceDetail />} />\n\t\t\t\t\t\t\t<Route path=\"*\" element={<NoMatch />} />\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</StoreProvider>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}